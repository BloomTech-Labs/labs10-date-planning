{"version":3,"file":"static/webpack/static/development/pages/index.js.04b692e7e3a0b480a0cd.hot-update.js","sources":["webpack:///./styledComponents/Parallax/Parallax.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// nodejs library that concatenates classes\nimport classNames from 'classnames';\n// nodejs library to set properties for components\nimport PropTypes from 'prop-types';\n// @material-ui/core components\nimport withStyles from '@material-ui/core/styles/withStyles';\n\n// core components\nimport parallaxStyle from '../../static/jss/material-kit-pro-react/components/parallaxStyle.jsx';\n\nconst Parallax = ({ classes, filter, className, children, style, small }) => {\n\tlet [ windowScrollTop, setWindowScroll ] = useState(0);\n\tuseEffect(() => {\n\t\tif (window.innerWidth >= 768) {\n\t\t\tsetWindowScroll(window.pageYOffset / 3);\n\t\t} else {\n\t\t\tsetWindowScroll(0);\n\t\t}\n\t\twindow.addEventListener('scroll', resetTransform);\n\t}, []);\n\n\tconst resetTransform = () => {\n\t\tsetWindowScroll(window.pageYOffset / 3);\n\t};\n\n\tconst parallaxClasses = classNames({\n\t\t[classes.parallax]: true,\n\t\t[classes[filter + 'Color']]: filter !== undefined,\n\t\t[classes.small]: small,\n\t\t[className]: className !== undefined,\n\t});\n\treturn (\n\t\t<div\n\t\t\tclassName={parallaxClasses}\n\t\t\tstyle={{\n\t\t\t\t...style,\n\t\t\t\tbackgroundImage:\n\t\t\t\t\t'url(https://images.unsplash.com/photo-1499309221416-e18ee3411c38?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80)',\n\t\t\t\ttransform: 'translate3d(0,' + windowScrollTop + 'px,0)',\n\t\t\t}}\n\t\t\t// ref='parallax'\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\nParallax.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n\tclassName: PropTypes.string,\n\tfilter: PropTypes.oneOf([ 'primary', 'rose', 'dark', 'info', 'success', 'warning', 'danger' ]),\n\tchildren: PropTypes.node,\n\tstyle: PropTypes.string,\n\timage: PropTypes.string,\n\tsmall: PropTypes.bool,\n};\n\nexport default withStyles(parallaxStyle)(Parallax);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AAEA;AAEA;AAJA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;;;;A","sourceRoot":""}