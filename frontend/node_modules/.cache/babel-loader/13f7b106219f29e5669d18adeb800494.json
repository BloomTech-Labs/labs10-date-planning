{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/lauren/Lambda-School/Labs/labs10-date-planning/frontend/components/Home/Events.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tquery ALL_EVENTS_QUERY($genre: String! = \\\"music\\\") {\\n\\t\\tgetEvents(genre: $genre) {\\n\\t\\t\\tid\\n\\t\\t\\ttitle\\n\\t\\t\\tdetails {\\n\\t\\t\\t\\turl\\n\\t\\t\\t\\tdescription\\n\\t\\t\\t\\tstart_time\\n\\t\\t\\t\\tbio\\n\\t\\t\\t\\ttags {\\n\\t\\t\\t\\t\\ttitle\\n\\t\\t\\t\\t\\towner\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tlocation {\\n\\t\\t\\t\\tvenue\\n\\t\\t\\t}\\n\\t\\t\\timage_url\\n\\t\\t}\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport GridItem from '../../styles/components/Grid/GridItem';\nimport Card from '../../styles/components/Card/Card';\nimport CardHeader from '../../styles/components/Card/CardHeader';\nimport Event from './Event';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CardStyles from '../../styles/components/Card/sectioncard';\nimport GridContainer from '../../styles/components/Grid/GridContainer';\nexport var ALL_EVENTS_QUERY = gql(_templateObject());\n\nvar Events = function Events(_ref) {\n  var classes = _ref.classes;\n  return React.createElement(GridContainer, {\n    style: {\n      maxWidth: 'calc(100% - 200px)',\n      marginLeft: '200px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Query, {\n    query: ALL_EVENTS_QUERY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, function (_ref2) {\n    var data = _ref2.data,\n        error = _ref2.error,\n        loading = _ref2.loading;\n    if (loading) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Loading...\");\n    if (error) return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Error: \", error.message);\n    return data.getEvents.map(function (event) {\n      return React.createElement(Event, {\n        event: event,\n        classes: classes,\n        key: event.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    });\n  }));\n};\n\nexport default withStyles(CardStyles)(Events);","map":{"version":3,"sources":["/Users/lauren/Lambda-School/Labs/labs10-date-planning/frontend/components/Home/Events.js"],"names":["React","Query","gql","GridItem","Card","CardHeader","Event","withStyles","CardStyles","GridContainer","ALL_EVENTS_QUERY","Events","classes","maxWidth","marginLeft","data","error","loading","message","getEvents","map","event","id"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,IAAP,MAAiB,mCAAjB;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,UAAP,MAAuB,0CAAvB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AAEA,OAAO,IAAMC,gBAAgB,GAAGR,GAAH,mBAAtB;;AAuBP,IAAMS,MAAM,GAAG,SAATA,MAAS,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC/B,SACC,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,oBAAZ;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,iBAA8B;AAAA,QAA3BK,IAA2B,SAA3BA,IAA2B;AAAA,QAArBC,KAAqB,SAArBA,KAAqB;AAAA,QAAdC,OAAc,SAAdA,OAAc;AAC9B,QAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACb,QAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,WAAOH,IAAI,CAACI,SAAL,CAAeC,GAAf,CAAmB,UAAAC,KAAK;AAAA,aAC9B,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,KAAd;AAAqB,QAAA,OAAO,EAAET,OAA9B;AAAuC,QAAA,GAAG,EAAES,KAAK,CAACC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD8B;AAAA,KAAxB,CAAP;AAGA,GAPF,CADD,CADD;AAaA,CAdD;;AAgBA,eAAef,UAAU,CAACC,UAAD,CAAV,CAAuBG,MAAvB,CAAf","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\n\nimport gql from 'graphql-tag';\nimport GridItem from '../../styles/components/Grid/GridItem';\nimport Card from '../../styles/components/Card/Card';\nimport CardHeader from '../../styles/components/Card/CardHeader';\nimport Event from './Event';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CardStyles from '../../styles/components/Card/sectioncard';\nimport GridContainer from '../../styles/components/Grid/GridContainer';\n\nexport const ALL_EVENTS_QUERY = gql`\n\tquery ALL_EVENTS_QUERY($genre: String! = \"music\") {\n\t\tgetEvents(genre: $genre) {\n\t\t\tid\n\t\t\ttitle\n\t\t\tdetails {\n\t\t\t\turl\n\t\t\t\tdescription\n\t\t\t\tstart_time\n\t\t\t\tbio\n\t\t\t\ttags {\n\t\t\t\t\ttitle\n\t\t\t\t\towner\n\t\t\t\t}\n\t\t\t}\n\t\t\tlocation {\n\t\t\t\tvenue\n\t\t\t}\n\t\t\timage_url\n\t\t}\n\t}\n`;\n\nconst Events = ({ classes }) => {\n\treturn (\n\t\t<GridContainer style={{ maxWidth: 'calc(100% - 200px)', marginLeft: '200px' }}>\n\t\t\t<Query query={ALL_EVENTS_QUERY}>\n\t\t\t\t{({ data, error, loading }) => {\n\t\t\t\t\tif (loading) return <p>Loading...</p>;\n\t\t\t\t\tif (error) return <p>Error: {error.message}</p>;\n\t\t\t\t\treturn data.getEvents.map(event => (\n\t\t\t\t\t\t<Event event={event} classes={classes} key={event.id} />\n\t\t\t\t\t));\n\t\t\t\t}}\n\t\t\t</Query>\n\t\t</GridContainer>\n\t);\n};\n\nexport default withStyles(CardStyles)(Events);\n"]},"metadata":{},"sourceType":"module"}