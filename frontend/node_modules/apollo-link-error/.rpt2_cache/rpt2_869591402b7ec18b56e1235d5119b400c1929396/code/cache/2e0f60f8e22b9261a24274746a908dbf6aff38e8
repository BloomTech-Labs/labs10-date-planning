{"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import * as tslib_1 from \"tslib\";\r\nimport { ApolloLink, Observable, } from 'apollo-link';\r\nexport var onError = function (errorHandler) {\r\n    return new ApolloLink(function (operation, forward) {\r\n        return new Observable(function (observer) {\r\n            var sub;\r\n            var retriedSub;\r\n            var retriedResult;\r\n            try {\r\n                sub = forward(operation).subscribe({\r\n                    next: function (result) {\r\n                        if (result.errors) {\r\n                            retriedResult = errorHandler({\r\n                                graphQLErrors: result.errors,\r\n                                response: result,\r\n                                operation: operation,\r\n                                forward: forward,\r\n                            });\r\n                            if (retriedResult) {\r\n                                retriedSub = retriedResult.subscribe({\r\n                                    next: observer.next.bind(observer),\r\n                                    error: observer.error.bind(observer),\r\n                                    complete: observer.complete.bind(observer),\r\n                                });\r\n                                return;\r\n                            }\r\n                        }\r\n                        observer.next(result);\r\n                    },\r\n                    error: function (networkError) {\r\n                        retriedResult = errorHandler({\r\n                            operation: operation,\r\n                            networkError: networkError,\r\n                            graphQLErrors: networkError.result && networkError.result.errors,\r\n                            forward: forward,\r\n                        });\r\n                        if (retriedResult) {\r\n                            retriedSub = retriedResult.subscribe({\r\n                                next: observer.next.bind(observer),\r\n                                error: observer.error.bind(observer),\r\n                                complete: observer.complete.bind(observer),\r\n                            });\r\n                            return;\r\n                        }\r\n                        observer.error(networkError);\r\n                    },\r\n                    complete: function () {\r\n                        if (!retriedResult) {\r\n                            observer.complete.bind(observer)();\r\n                        }\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n                errorHandler({ networkError: e, operation: operation, forward: forward });\r\n                observer.error(e);\r\n            }\r\n            return function () {\r\n                if (sub)\r\n                    sub.unsubscribe();\r\n                if (retriedSub)\r\n                    sub.unsubscribe();\r\n            };\r\n        });\r\n    });\r\n};\r\nvar ErrorLink = (function (_super) {\r\n    tslib_1.__extends(ErrorLink, _super);\r\n    function ErrorLink(errorHandler) {\r\n        var _this = _super.call(this) || this;\r\n        _this.link = onError(errorHandler);\r\n        return _this;\r\n    }\r\n    ErrorLink.prototype.request = function (operation, forward) {\r\n        return this.link.request(operation, forward);\r\n    };\r\n    return ErrorLink;\r\n}(ApolloLink));\r\nexport { ErrorLink };\r\n//# sourceMappingURL=index.js.map","dtsmap":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-error/index.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"index.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/index.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,EACL,UAAU,EACV,UAAU,EACV,SAAS,EACT,QAAQ,EACR,WAAW,EACZ,MAAM,aAAa,CAAC;AACrB,OAAO,EAAE,YAAY,EAAE,eAAe,EAAE,MAAM,SAAS,CAAC;AACxD,OAAO,EAAE,WAAW,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAExE,MAAM,WAAW,aAAa;IAC5B,aAAa,CAAC,EAAE,aAAa,CAAC,YAAY,CAAC,CAAC;IAC5C,YAAY,CAAC,EAAE,KAAK,GAAG,WAAW,GAAG,gBAAgB,CAAC;IACtD,QAAQ,CAAC,EAAE,eAAe,CAAC;IAC3B,SAAS,EAAE,SAAS,CAAC;IACrB,OAAO,EAAE,QAAQ,CAAC;CACnB;AAED,yBAAiB,SAAS,CAAC;IAIzB,UAAiB,YAAY;QAC3B,CAAC,KAAK,EAAE,aAAa,GAAG,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;KACxD;CACF;AAGD,MAAM,QAAQ,YAAY,GAAG,SAAS,CAAC,YAAY,CAAC;AAEpD,eAAO,MAAM,OAAO,4CAkEnB,CAAC;AAEF,qBAAa,SAAU,SAAQ,UAAU;IACvC,OAAO,CAAC,IAAI,CAAa;gBACb,YAAY,EAAE,SAAS,CAAC,YAAY;IAKzC,OAAO,CACZ,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,QAAQ,GAChB,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI;CAGlC\"}"},"dts":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-error/index.d.ts","writeByteOrderMark":false,"text":"import { ApolloLink, Observable, Operation, NextLink, FetchResult } from 'apollo-link';\r\nimport { GraphQLError, ExecutionResult } from 'graphql';\r\nimport { ServerError, ServerParseError } from 'apollo-link-http-common';\r\nexport interface ErrorResponse {\r\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\r\n    networkError?: Error | ServerError | ServerParseError;\r\n    response?: ExecutionResult;\r\n    operation: Operation;\r\n    forward: NextLink;\r\n}\r\nexport declare namespace ErrorLink {\r\n    interface ErrorHandler {\r\n        (error: ErrorResponse): Observable<FetchResult> | void;\r\n    }\r\n}\r\nexport import ErrorHandler = ErrorLink.ErrorHandler;\r\nexport declare const onError: (errorHandler: ErrorHandler) => ApolloLink;\r\nexport declare class ErrorLink extends ApolloLink {\r\n    private link;\r\n    constructor(errorHandler: ErrorLink.ErrorHandler);\r\n    request(operation: Operation, forward: NextLink): Observable<FetchResult> | null;\r\n}\r\n//# sourceMappingURL=index.d.ts.map"}}
