"use strict";
/* global location, WebSocket */

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs2/regenerator"));

var _promise = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/promise"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/asyncToGenerator"));

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var router_1 = __importDefault(require("next/router"));

var unfetch_1 = __importDefault(require("unfetch"));

var _location = location,
    hostname = _location.hostname,
    protocol = _location.protocol;
var wsProtocol = protocol.includes('https') ? 'wss' : 'ws';
var retryTime = 5000;
var ws = null;
var lastHref = null;

exports.default =
/*#__PURE__*/
function () {
  var _ref2 = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee6(_ref) {
    var assetPrefix, setup, ping, _ping, pingerTimeout, runPinger, _runPinger;

    return _regenerator.default.wrap(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _runPinger = function _ref10() {
              _runPinger = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee5() {
                return _regenerator.default.wrap(function _callee5$(_context5) {
                  while (1) {
                    switch (_context5.prev = _context5.next) {
                      case 0:
                        if (document.hidden) {
                          _context5.next = 7;
                          break;
                        }

                        _context5.next = 3;
                        return ping();

                      case 3:
                        _context5.next = 5;
                        return new _promise.default(function (resolve) {
                          pingerTimeout = setTimeout(resolve, 5000);
                        });

                      case 5:
                        _context5.next = 0;
                        break;

                      case 7:
                      case "end":
                        return _context5.stop();
                    }
                  }
                }, _callee5, this);
              }));
              return _runPinger.apply(this, arguments);
            };

            runPinger = function _ref9() {
              return _runPinger.apply(this, arguments);
            };

            _ping = function _ref8() {
              _ping = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee4() {
                return _regenerator.default.wrap(function _callee4$(_context4) {
                  while (1) {
                    switch (_context4.prev = _context4.next) {
                      case 0:
                        if (ws.readyState === ws.OPEN) {
                          ws.send(router_1.default.pathname);
                        }

                      case 1:
                      case "end":
                        return _context4.stop();
                    }
                  }
                }, _callee4, this);
              }));
              return _ping.apply(this, arguments);
            };

            ping = function _ref7() {
              return _ping.apply(this, arguments);
            };

            assetPrefix = _ref.assetPrefix;
            router_1.default.ready(function () {
              router_1.default.events.on('routeChangeComplete', ping);
            });

            setup =
            /*#__PURE__*/
            function () {
              var _ref3 = (0, _asyncToGenerator2.default)(
              /*#__PURE__*/
              _regenerator.default.mark(function _callee3(reconnect) {
                return _regenerator.default.wrap(function _callee3$(_context3) {
                  while (1) {
                    switch (_context3.prev = _context3.next) {
                      case 0:
                        if (!(ws && ws.readyState === ws.OPEN)) {
                          _context3.next = 2;
                          break;
                        }

                        return _context3.abrupt("return", _promise.default.resolve());

                      case 2:
                        return _context3.abrupt("return", new _promise.default(function (resolve) {
                          ws = new WebSocket("".concat(wsProtocol, "://").concat(hostname, ":").concat(process.env.NEXT_WS_PORT).concat(process.env.NEXT_WS_PROXY_PATH));

                          ws.onopen = function () {
                            return resolve();
                          };

                          ws.onclose = function () {
                            setTimeout(
                            /*#__PURE__*/
                            (0, _asyncToGenerator2.default)(
                            /*#__PURE__*/
                            _regenerator.default.mark(function _callee() {
                              return _regenerator.default.wrap(function _callee$(_context) {
                                while (1) {
                                  switch (_context.prev = _context.next) {
                                    case 0:
                                      _context.next = 2;
                                      return unfetch_1.default("".concat(assetPrefix, "/_next/on-demand-entries-ping")).then(function (res) {
                                        return res.status === 200 && location.reload();
                                      }).catch(function () {});

                                    case 2:
                                      _context.next = 4;
                                      return setup(true);

                                    case 4:
                                      resolve();

                                    case 5:
                                    case "end":
                                      return _context.stop();
                                  }
                                }
                              }, _callee, this);
                            })), retryTime);
                          };

                          ws.onmessage =
                          /*#__PURE__*/
                          function () {
                            var _ref6 = (0, _asyncToGenerator2.default)(
                            /*#__PURE__*/
                            _regenerator.default.mark(function _callee2(_ref5) {
                              var data, payload, pageRes;
                              return _regenerator.default.wrap(function _callee2$(_context2) {
                                while (1) {
                                  switch (_context2.prev = _context2.next) {
                                    case 0:
                                      data = _ref5.data;
                                      payload = JSON.parse(data);

                                      if (!(payload.invalid && lastHref !== location.href)) {
                                        _context2.next = 7;
                                        break;
                                      }

                                      _context2.next = 5;
                                      return unfetch_1.default(location.href, {
                                        credentials: 'omit'
                                      });

                                    case 5:
                                      pageRes = _context2.sent;

                                      if (pageRes.status === 200) {
                                        location.reload();
                                      } else {
                                        lastHref = location.href;
                                      }

                                    case 7:
                                    case "end":
                                      return _context2.stop();
                                  }
                                }
                              }, _callee2, this);
                            }));

                            return function (_x3) {
                              return _ref6.apply(this, arguments);
                            };
                          }();
                        }));

                      case 3:
                      case "end":
                        return _context3.stop();
                    }
                  }
                }, _callee3, this);
              }));

              return function setup(_x2) {
                return _ref3.apply(this, arguments);
              };
            }();

            _context6.next = 9;
            return setup();

          case 9:
            document.addEventListener('visibilitychange', function () {
              if (!document.hidden) {
                runPinger();
              } else {
                clearTimeout(pingerTimeout);
              }
            }, false);
            setTimeout(function () {
              runPinger().catch(function (err) {
                console.error(err);
              });
            }, 10000);

          case 11:
          case "end":
            return _context6.stop();
        }
      }
    }, _callee6, this);
  }));

  return function (_x) {
    return _ref2.apply(this, arguments);
  };
}();