{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ApolloLink, Observable, fromError } from 'apollo-link';\r\nimport { serializeFetchParameter, selectURI, parseAndCheckHttpResponse, checkFetcher, selectHttpOptionsAndBody, createSignalIfSupported, fallbackHttpConfig, } from 'apollo-link-http-common';\r\nexport var createHttpLink = function (linkOptions) {\r\n    if (linkOptions === void 0) { linkOptions = {}; }\r\n    var _a = linkOptions.uri, uri = _a === void 0 ? '/graphql' : _a, fetcher = linkOptions.fetch, includeExtensions = linkOptions.includeExtensions, useGETForQueries = linkOptions.useGETForQueries, requestOptions = tslib_1.__rest(linkOptions, [\"uri\", \"fetch\", \"includeExtensions\", \"useGETForQueries\"]);\r\n    checkFetcher(fetcher);\r\n    if (!fetcher) {\r\n        fetcher = fetch;\r\n    }\r\n    var linkConfig = {\r\n        http: { includeExtensions: includeExtensions },\r\n        options: requestOptions.fetchOptions,\r\n        credentials: requestOptions.credentials,\r\n        headers: requestOptions.headers,\r\n    };\r\n    return new ApolloLink(function (operation) {\r\n        var chosenURI = selectURI(operation, uri);\r\n        var context = operation.getContext();\r\n        var clientAwarenessHeaders = {};\r\n        if (context.clientAwareness) {\r\n            var _a = context.clientAwareness, name_1 = _a.name, version = _a.version;\r\n            if (name_1) {\r\n                clientAwarenessHeaders['apollographql-client-name'] = name_1;\r\n            }\r\n            if (version) {\r\n                clientAwarenessHeaders['apollographql-client-version'] = version;\r\n            }\r\n        }\r\n        var contextHeaders = tslib_1.__assign({}, clientAwarenessHeaders, context.headers);\r\n        var contextConfig = {\r\n            http: context.http,\r\n            options: context.fetchOptions,\r\n            credentials: context.credentials,\r\n            headers: contextHeaders,\r\n        };\r\n        var _b = selectHttpOptionsAndBody(operation, fallbackHttpConfig, linkConfig, contextConfig), options = _b.options, body = _b.body;\r\n        var controller;\r\n        if (!options.signal) {\r\n            var _c = createSignalIfSupported(), _controller = _c.controller, signal = _c.signal;\r\n            controller = _controller;\r\n            if (controller)\r\n                options.signal = signal;\r\n        }\r\n        var definitionIsMutation = function (d) {\r\n            return d.kind === 'OperationDefinition' && d.operation === 'mutation';\r\n        };\r\n        if (useGETForQueries &&\r\n            !operation.query.definitions.some(definitionIsMutation)) {\r\n            options.method = 'GET';\r\n        }\r\n        if (options.method === 'GET') {\r\n            var _d = rewriteURIForGET(chosenURI, body), newURI = _d.newURI, parseError = _d.parseError;\r\n            if (parseError) {\r\n                return fromError(parseError);\r\n            }\r\n            chosenURI = newURI;\r\n        }\r\n        else {\r\n            try {\r\n                options.body = serializeFetchParameter(body, 'Payload');\r\n            }\r\n            catch (parseError) {\r\n                return fromError(parseError);\r\n            }\r\n        }\r\n        return new Observable(function (observer) {\r\n            fetcher(chosenURI, options)\r\n                .then(function (response) {\r\n                operation.setContext({ response: response });\r\n                return response;\r\n            })\r\n                .then(parseAndCheckHttpResponse(operation))\r\n                .then(function (result) {\r\n                observer.next(result);\r\n                observer.complete();\r\n                return result;\r\n            })\r\n                .catch(function (err) {\r\n                if (err.name === 'AbortError')\r\n                    return;\r\n                if (err.result && err.result.errors && err.result.data) {\r\n                    observer.next(err.result);\r\n                }\r\n                observer.error(err);\r\n            });\r\n            return function () {\r\n                if (controller)\r\n                    controller.abort();\r\n            };\r\n        });\r\n    });\r\n};\r\nfunction rewriteURIForGET(chosenURI, body) {\r\n    var queryParams = [];\r\n    var addQueryParam = function (key, value) {\r\n        queryParams.push(key + \"=\" + encodeURIComponent(value));\r\n    };\r\n    if ('query' in body) {\r\n        addQueryParam('query', body.query);\r\n    }\r\n    if (body.operationName) {\r\n        addQueryParam('operationName', body.operationName);\r\n    }\r\n    if (body.variables) {\r\n        var serializedVariables = void 0;\r\n        try {\r\n            serializedVariables = serializeFetchParameter(body.variables, 'Variables map');\r\n        }\r\n        catch (parseError) {\r\n            return { parseError: parseError };\r\n        }\r\n        addQueryParam('variables', serializedVariables);\r\n    }\r\n    if (body.extensions) {\r\n        var serializedExtensions = void 0;\r\n        try {\r\n            serializedExtensions = serializeFetchParameter(body.extensions, 'Extensions map');\r\n        }\r\n        catch (parseError) {\r\n            return { parseError: parseError };\r\n        }\r\n        addQueryParam('extensions', serializedExtensions);\r\n    }\r\n    var fragment = '', preFragment = chosenURI;\r\n    var fragmentStart = chosenURI.indexOf('#');\r\n    if (fragmentStart !== -1) {\r\n        fragment = chosenURI.substr(fragmentStart);\r\n        preFragment = chosenURI.substr(0, fragmentStart);\r\n    }\r\n    var queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\r\n    var newURI = preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\r\n    return { newURI: newURI };\r\n}\r\nvar HttpLink = (function (_super) {\r\n    tslib_1.__extends(HttpLink, _super);\r\n    function HttpLink(opts) {\r\n        return _super.call(this, createHttpLink(opts).request) || this;\r\n    }\r\n    return HttpLink;\r\n}(ApolloLink));\r\nexport { HttpLink };\r\n//# sourceMappingURL=httpLink.js.map","map":"{\"version\":3,\"file\":\"httpLink.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/httpLink.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-http/httpLink.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"httpLink.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"src/httpLink.ts\"],\"names\":[],\"mappings\":\"AAEA,OAAO,EAAE,UAAU,EAAc,cAAc,EAAa,MAAM,aAAa,CAAC;AAChF,OAAO,EASL,WAAW,EACX,WAAW,IAAI,YAAY,EAC5B,MAAM,yBAAyB,CAAC;AAGjC,yBAAiB,QAAQ,CAAC;IAExB,UAAiB,WAAY,SAAQ,YAAY;KAAG;IACpD,UAAiB,OAAQ,SAAQ,WAAW;QAM1C,gBAAgB,CAAC,EAAE,OAAO,CAAC;KAC5B;CACF;AAGD,MAAM,QAAQ,YAAY,GAAG,QAAQ,CAAC,OAAO,CAAC;AAC9C,MAAM,QAAQ,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;AAEjD,eAAO,MAAM,cAAc,4CA+J1B,CAAC;AA8DF,qBAAa,QAAS,SAAQ,UAAU;IAC/B,SAAS,EAAE,cAAc,CAAC;gBACrB,IAAI,CAAC,EAAE,QAAQ,CAAC,OAAO;CAGpC\"}"},"dts":{"name":"/Users/hwillson/Documents/git/apollo/apollo-link/packages/apollo-link-http/httpLink.d.ts","writeByteOrderMark":false,"text":"import { ApolloLink, RequestHandler } from 'apollo-link';\r\nimport { HttpOptions, UriFunction as _UriFunction } from 'apollo-link-http-common';\r\nexport declare namespace HttpLink {\r\n    interface UriFunction extends _UriFunction {\r\n    }\r\n    interface Options extends HttpOptions {\r\n        useGETForQueries?: boolean;\r\n    }\r\n}\r\nexport import FetchOptions = HttpLink.Options;\r\nexport import UriFunction = HttpLink.UriFunction;\r\nexport declare const createHttpLink: (linkOptions?: FetchOptions) => ApolloLink;\r\nexport declare class HttpLink extends ApolloLink {\r\n    requester: RequestHandler;\r\n    constructor(opts?: HttpLink.Options);\r\n}\r\n//# sourceMappingURL=httpLink.d.ts.map"}}
