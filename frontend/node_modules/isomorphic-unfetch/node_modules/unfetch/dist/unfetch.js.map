{"version":3,"file":"unfetch.js","sources":["../src/index.mjs"],"sourcesContent":["export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tlet request = new XMLHttpRequest();\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\tfor (let i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\trequest.onload = () => {\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.send(options.body || null);\n\n\t\tfunction response() {\n\t\t\tlet keys = [],\n\t\t\t\tall = [],\n\t\t\t\theaders = {},\n\t\t\t\theader;\n\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theader = headers[key];\n\t\t\t\theaders[key] = header ? `${header},${value}` : value;\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\t\tstatus: request.status,\n\t\t\t\tstatusText: request.statusText,\n\t\t\t\turl: request.responseURL,\n\t\t\t\tclone: response,\n\t\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\t\tjson: () => Promise.resolve(request.responseText).then(JSON.parse),\n\t\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\t\theaders: {\n\t\t\t\t\tkeys: () => keys,\n\t\t\t\t\tentries: () => all,\n\t\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n}\n"],"names":["url","options","Promise","resolve","reject","let","request","XMLHttpRequest","i","open","method","headers","setRequestHeader","response","header","keys","all","getAllResponseHeaders","replace","m","key","value","push","toLowerCase","ok","status","statusText","responseURL","clone","text","responseText","json","then","JSON","parse","blob","Blob","entries","get","n","has","withCredentials","credentials","onload","onerror","send","body"],"mappings":"eAAe,SAASA,EAAKC,GAE5B,OADAA,EAAUA,MACH,IAAIC,iBAAUC,EAASC,GAC7BC,IAAIC,EAAU,IAAIC,eAIlB,IAAKF,IAAIG,KAFTF,EAAQG,KAAKR,EAAQS,QAAU,MAAOV,GAAK,GAE7BC,EAAQU,QACrBL,EAAQM,iBAAiBJ,EAAGP,EAAQU,QAAQH,IAa7C,SAASK,IACRR,IAGCS,EAHGC,KACHC,KACAL,KAUD,OAPAL,EAAQW,wBAAwBC,QAAQ,wCAAiCC,EAAGC,EAAKC,GAChFN,EAAKO,KAAKF,EAAMA,EAAIG,eACpBP,EAAIM,MAAMF,EAAKC,IAEfV,EAAQS,IADRN,EAASH,EAAQS,IACUN,MAAUO,EAAUA,KAI/CG,GAA8B,IAAzBlB,EAAQmB,OAAO,IAAI,GACxBA,OAAQnB,EAAQmB,OAChBC,WAAYpB,EAAQoB,WACpB1B,IAAKM,EAAQqB,YACbC,MAAOf,EACPgB,uBAAY3B,QAAQC,QAAQG,EAAQwB,eACpCC,uBAAY7B,QAAQC,QAAQG,EAAQwB,cAAcE,KAAKC,KAAKC,QAC5DC,uBAAYjC,QAAQC,QAAQ,IAAIiC,MAAM9B,EAAQO,aAC9CF,SACCI,uBAAYA,GACZsB,0BAAerB,GACfsB,aAAKC,UAAK5B,EAAQ4B,EAAEhB,gBACpBiB,aAAKD,UAAKA,EAAEhB,gBAAiBZ,KApChCL,EAAQmC,gBAAuC,WAArBxC,EAAQyC,YAElCpC,EAAQqC,kBACPxC,EAAQU,MAGTP,EAAQsC,QAAUxC,EAElBE,EAAQuC,KAAK5C,EAAQ6C,MAAQ"}