(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jss')) :
	typeof define === 'function' && define.amd ? define(['exports', 'jss'], factory) :
	(factory((global.jssPluginVendorPrefixer = {}),global.jss));
}(this, (function (exports,jss) { 'use strict';

	function unwrapExports (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
	}

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	};

	var isBrowser = (typeof window === "undefined" ? "undefined" : _typeof(window)) === "object" && (typeof document === "undefined" ? "undefined" : _typeof(document)) === 'object' && document.nodeType === 9;

	var module$1 = /*#__PURE__*/Object.freeze({
		isBrowser: isBrowser,
		default: isBrowser
	});

	var _isInBrowser = ( module$1 && isBrowser ) || module$1;

	var prefix = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}

	var js = ''; // Export javascript style and css style vendor prefixes.
	// Based on "transform" support test.

	var css = ''; // We should not do anything if required serverside.

	if (_isInBrowser2['default']) {
	  // Order matters. We need to check Webkit the last one because
	  // other vendors use to add Webkit prefixes to some properties
	  var jsCssMap = {
	    Moz: '-moz-',
	    ms: '-ms-',
	    O: '-o-',
	    Webkit: '-webkit-'
	  };

	  var _document$createEleme = document.createElement('p'),
	      style = _document$createEleme.style;

	  var testProp = 'Transform';

	  for (var key in jsCssMap) {
	    if (key + testProp in style) {
	      js = key;
	      css = jsCssMap[key];
	      break;
	    }
	  } // Correctly detect the Edge browser.


	  if (js === 'Webkit' && 'msHyphens' in style) {
	    js = 'ms';
	    css = jsCssMap.ms;
	  }
	}
	/**
	 * Vendor prefix string for the current browser.
	 *
	 * @type {{js: String, css: String}}
	 * @api public
	 */


	exports['default'] = {
	  js: js,
	  css: css
	};
	});

	unwrapExports(prefix);

	var supportedKeyframes_1 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedKeyframes;



	var _prefix2 = _interopRequireDefault(prefix);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}
	/**
	 * Test if a keyframe at-rule should be prefixed or not
	 *
	 * @param {String} vendor prefix string for the current browser.
	 * @return {String}
	 * @api public
	 */


	function supportedKeyframes(key) {
	  // Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'
	  if (key[1] === '-') return key; // No need to prefix IE/Edge. Older browsers will ignore unsupported rules.
	  // https://caniuse.com/#search=keyframes

	  if (_prefix2['default'].js === 'ms') return key;
	  return '@' + _prefix2['default'].css + 'keyframes' + key.substr(10);
	}
	});

	unwrapExports(supportedKeyframes_1);

	var appearence = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support old appearance props syntax.
	// https://caniuse.com/#search=appearance


	exports['default'] = {
	  noPrefill: ['appearance'],
	  supportedProperty: function supportedProperty(prop) {
	    if (prop !== 'appearance') return false;
	    if (_prefix2['default'].js === 'ms') return '-webkit-' + prop;
	    return _prefix2['default'].css + prop;
	  }
	};
	});

	unwrapExports(appearence);

	var camelize_1 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = camelize;
	var regExp = /[-\s]+(.)?/g;
	/**
	 * Replaces the letter with the capital letter
	 *
	 * @param {String} match
	 * @param {String} c
	 * @return {String}
	 * @api private
	 */

	function toUpper(match, c) {
	  return c ? c.toUpperCase() : '';
	}
	/**
	 * Convert dash separated strings to camel-cased.
	 *
	 * @param {String} str
	 * @return {String}
	 * @api private
	 */


	function camelize(str) {
	  return str.replace(regExp, toUpper);
	}
	});

	unwrapExports(camelize_1);

	var pascalize_1 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = pascalize;



	var _camelize2 = _interopRequireDefault(camelize_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}
	/**
	 * Convert dash separated strings to pascal cased.
	 *
	 * @param {String} str
	 * @return {String}
	 * @api private
	 */


	function pascalize(str) {
	  return (0, _camelize2['default'])('-' + str);
	}
	});

	unwrapExports(pascalize_1);

	var breakPropsOld = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);



	var _pascalize2 = _interopRequireDefault(pascalize_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support old break-* props syntax.
	// https://caniuse.com/#search=multicolumn
	// https://github.com/postcss/autoprefixer/issues/491
	// https://github.com/postcss/autoprefixer/issues/177


	exports['default'] = {
	  supportedProperty: function supportedProperty(prop, style) {
	    if (!/^break-/.test(prop)) return false;

	    if (_prefix2['default'].js === 'Webkit') {
	      var jsProp = 'WebkitColumn' + (0, _pascalize2['default'])(prop);
	      return jsProp in style ? _prefix2['default'].css + 'column-' + prop : false;
	    }

	    if (_prefix2['default'].js === 'Moz') {
	      var _jsProp = 'page' + (0, _pascalize2['default'])(prop);

	      return _jsProp in style ? 'page-' + prop : false;
	    }

	    return false;
	  }
	};
	});

	unwrapExports(breakPropsOld);

	var colorAdjust = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support old color-adjust prop syntax.
	// https://caniuse.com/#search=color-adjust


	exports['default'] = {
	  noPrefill: ['color-adjust'],
	  supportedProperty: function supportedProperty(prop) {
	    if (prop !== 'color-adjust') return false;
	    if (_prefix2['default'].js === 'Webkit') return _prefix2['default'].css + 'print-' + prop;
	    return prop;
	  }
	};
	});

	unwrapExports(colorAdjust);

	var flex2009 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);



	var _pascalize2 = _interopRequireDefault(pascalize_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}

	var propMap = {
	  flex: 'box-flex',
	  'flex-grow': 'box-flex',
	  'flex-direction': ['box-orient', 'box-direction'],
	  order: 'box-ordinal-group',
	  'align-items': 'box-align',
	  'flex-flow': ['box-orient', 'box-direction'],
	  'justify-content': 'box-pack'
	};
	var propKeys = Object.keys(propMap);

	var prefixCss = function prefixCss(p) {
	  return _prefix2['default'].css + p;
	}; // Support old flex spec from 2009.


	exports['default'] = {
	  supportedProperty: function supportedProperty(prop, style, _ref) {
	    var multiple = _ref.multiple;

	    if (propKeys.indexOf(prop) > -1) {
	      var newProp = propMap[prop];

	      if (!Array.isArray(newProp)) {
	        return _prefix2['default'].js + (0, _pascalize2['default'])(newProp) in style ? _prefix2['default'].css + newProp : false;
	      }

	      if (!multiple) return false;

	      for (var i = 0; i < newProp.length; i++) {
	        if (!(_prefix2['default'].js + (0, _pascalize2['default'])(newProp[0]) in style)) {
	          return false;
	        }
	      }

	      return newProp.map(prefixCss);
	    }

	    return false;
	  }
	};
	});

	unwrapExports(flex2009);

	var flex2012 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);



	var _pascalize2 = _interopRequireDefault(pascalize_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}

	var propMap = {
	  'flex-grow': 'flex-positive',
	  'flex-shrink': 'flex-negative',
	  'flex-basis': 'flex-preferred-size',
	  'justify-content': 'flex-pack',
	  order: 'flex-order',
	  'align-items': 'flex-align',
	  'align-content': 'flex-line-pack' // 'align-self' is handled by 'align-self' plugin.
	  // Support old flex spec from 2012.

	};
	exports['default'] = {
	  supportedProperty: function supportedProperty(prop, style) {
	    var newProp = propMap[prop];
	    if (!newProp) return false;
	    return _prefix2['default'].js + (0, _pascalize2['default'])(newProp) in style ? _prefix2['default'].css + newProp : false;
	  }
	};
	});

	unwrapExports(flex2012);

	var inlineLogicalOld = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);



	var _pascalize2 = _interopRequireDefault(pascalize_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support old inline-logical syntax.
	// See https://github.com/postcss/autoprefixer/issues/324.


	exports['default'] = {
	  supportedProperty: function supportedProperty(prop, style) {
	    if (!/^(border|margin|padding)-inline/.test(prop)) return false;
	    if (_prefix2['default'].js === 'Moz') return prop;
	    var newProp = prop.replace('-inline', '');
	    return _prefix2['default'].js + (0, _pascalize2['default'])(newProp) in style ? _prefix2['default'].css + newProp : false;
	  }
	};
	});

	unwrapExports(inlineLogicalOld);

	var mask = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);



	var _pascalize2 = _interopRequireDefault(pascalize_1);



	var _camelize2 = _interopRequireDefault(camelize_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Mask property support cannot detect directly in WebKit browsers,
	// but we can use a longhand property instead.
	// https://caniuse.com/#search=mask


	exports['default'] = {
	  noPrefill: ['mask'],
	  supportedProperty: function supportedProperty(prop, style) {
	    if (!/^mask/.test(prop)) return false;

	    if (_prefix2['default'].js === 'Webkit') {
	      var longhand = 'mask-image';

	      if ((0, _camelize2['default'])(longhand) in style) {
	        return prop;
	      }

	      if (_prefix2['default'].js + (0, _pascalize2['default'])(longhand) in style) {
	        return _prefix2['default'].css + prop;
	      }
	    }

	    return prop;
	  }
	};
	});

	unwrapExports(mask);

	var prefixed = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);



	var _pascalize2 = _interopRequireDefault(pascalize_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Test if property is supported with vendor prefix.


	exports['default'] = {
	  supportedProperty: function supportedProperty(prop, style) {
	    var pascalized = (0, _pascalize2['default'])(prop);
	    if (_prefix2['default'].js + pascalized in style) return _prefix2['default'].css + prop; // Try webkit fallback.

	    if (_prefix2['default'].js !== 'Webkit' && 'Webkit' + pascalized in style) return prop;
	    return false;
	  }
	};
	});

	unwrapExports(prefixed);

	var scrollSnap = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support scroll-snap props syntax.
	// https://caniuse.com/#search=scroll-snap


	exports['default'] = {
	  supportedProperty: function supportedProperty(prop) {
	    if (prop.substring(0, 11) !== 'scroll-snap') return false;

	    if (_prefix2['default'].js === 'ms') {
	      return '' + _prefix2['default'].css + prop;
	    }

	    return prop;
	  }
	};
	});

	unwrapExports(scrollSnap);

	var overscrollBehavior = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support overscroll-behavior props syntax.
	// https://caniuse.com/#search=overscroll-behavior


	exports['default'] = {
	  supportedProperty: function supportedProperty(prop) {
	    if (prop !== 'overscroll-behavior') return false;

	    if (_prefix2['default'].js === 'ms') {
	      return _prefix2['default'].css + 'scroll-chaining';
	    }

	    return prop;
	  }
	};
	});

	unwrapExports(overscrollBehavior);

	var transform = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support transform prop syntax.
	// https://caniuse.com/#search=transform


	exports['default'] = {
	  noPrefill: ['transform'],
	  supportedProperty: function supportedProperty(prop, style, options) {
	    if (prop !== 'transform') return false;

	    if (options.transform) {
	      return prop;
	    }

	    return _prefix2['default'].css + prop;
	  }
	};
	});

	unwrapExports(transform);

	var transition = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support transition prop syntax.
	// https://caniuse.com/#search=transition


	exports['default'] = {
	  noPrefill: ['transition'],
	  supportedProperty: function supportedProperty(prop, style, options) {
	    if (prop !== 'transition') return false;

	    if (options.transition) {
	      return prop;
	    }

	    return _prefix2['default'].css + prop;
	  }
	};
	});

	unwrapExports(transition);

	var unprefixed = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _camelize2 = _interopRequireDefault(camelize_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Test if a property supported as it is.
	// Camelization is required because we can't test using.
	// CSS syntax for e.g. in FF.


	exports['default'] = {
	  supportedProperty: function supportedProperty(prop, style) {
	    return (0, _camelize2['default'])(prop) in style ? prop : false;
	  }
	};
	});

	unwrapExports(unprefixed);

	var writingMode = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});



	var _prefix2 = _interopRequireDefault(prefix);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	} // Support writing-mode prop syntax.
	// https://caniuse.com/#search=writing-mode


	exports['default'] = {
	  noPrefill: ['writing-mode'],
	  supportedProperty: function supportedProperty(prop) {
	    if (prop !== 'writing-mode') return false;

	    if (_prefix2['default'].js === 'Webkit' || _prefix2['default'].js === 'ms') {
	      return _prefix2['default'].css + prop;
	    }

	    return prop;
	  }
	};
	});

	unwrapExports(writingMode);

	var plugins_1 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.noPrefill = exports.propertyDetectors = undefined;



	var _appearence2 = _interopRequireDefault(appearence);



	var _breakPropsOld2 = _interopRequireDefault(breakPropsOld);



	var _colorAdjust2 = _interopRequireDefault(colorAdjust);



	var _flex2 = _interopRequireDefault(flex2009);



	var _flex4 = _interopRequireDefault(flex2012);



	var _inlineLogicalOld2 = _interopRequireDefault(inlineLogicalOld);



	var _mask2 = _interopRequireDefault(mask);



	var _prefixed2 = _interopRequireDefault(prefixed);



	var _scrollSnap2 = _interopRequireDefault(scrollSnap);



	var _overscrollBehavior2 = _interopRequireDefault(overscrollBehavior);



	var _transform2 = _interopRequireDefault(transform);



	var _transition2 = _interopRequireDefault(transition);



	var _unprefixed2 = _interopRequireDefault(unprefixed);



	var _writingMode2 = _interopRequireDefault(writingMode);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}

	function _toConsumableArray(arr) {
	  if (Array.isArray(arr)) {
	    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
	      arr2[i] = arr[i];
	    }

	    return arr2;
	  } else {
	    return Array.from(arr);
	  }
	} // Please, keep order plugins:
	// plugins = [
	//   ...plugins,
	//    breakPropsOld,
	//    inlineLogicalOld,
	//    unprefixed,
	//    prefixed,
	//    scrollSnap,
	//    scrollChaining,
	//    flex2012,
	//    flex2009
	// ]
	// Plugins without 'noPrefill' value, going last.
	// 'flex-*' plugins should be at the bottom.
	// 'flex2009' going after 'flex2012'.
	// 'prefixed' going after 'unprefixed'


	var plugins = [_appearence2['default'], _transform2['default'], _transition2['default'], _mask2['default'], _writingMode2['default'], _colorAdjust2['default'], _breakPropsOld2['default'], _inlineLogicalOld2['default'], _unprefixed2['default'], _prefixed2['default'], _scrollSnap2['default'], _overscrollBehavior2['default'], _flex4['default'], _flex2['default']];
	var propertyDetectors = exports.propertyDetectors = plugins.filter(function (p) {
	  return p.supportedProperty;
	}).map(function (p) {
	  return p.supportedProperty;
	});
	var noPrefill = exports.noPrefill = plugins.filter(function (p) {
	  return p.noPrefill;
	}).reduce(function (a, p) {
	  a.push.apply(a, _toConsumableArray(p.noPrefill));
	  return a;
	}, []);
	});

	unwrapExports(plugins_1);
	var plugins_2 = plugins_1.noPrefill;
	var plugins_3 = plugins_1.propertyDetectors;

	var supportedProperty_1 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedProperty;



	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);



	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}

	var el = void 0;
	var cache = {};

	if (_isInBrowser2['default']) {
	  el = document.createElement('p'); // We test every property on vendor prefix requirement.
	  // Once tested, result is cached. It gives us up to 70% perf boost.
	  // http://jsperf.com/element-style-object-access-vs-plain-object
	  //
	  // Prefill cache with known css properties to reduce amount of
	  // properties we need to feature test at runtime.
	  // http://davidwalsh.name/vendor-prefix

	  var computed = window.getComputedStyle(document.documentElement, '');

	  for (var key in computed) {
	    // eslint-disable-next-line no-restricted-globals
	    if (!isNaN(key)) cache[computed[key]] = computed[key];
	  } // Properties that cannot be correctly detected using the
	  // cache prefill method.


	  plugins_1.noPrefill.forEach(function (x) {
	    return delete cache[x];
	  });
	}
	/**
	 * Test if a property is supported, returns supported property with vendor
	 * prefix if required. Returns `false` if not supported.
	 *
	 * @param {String} prop dash separated
	 * @param {Object} [options]
	 * @return {String|Boolean}
	 * @api public
	 */


	function supportedProperty(prop) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // For server-side rendering.

	  if (!el) return prop; // Remove cache for benchmark tests or return property from the cache.

	  if (cache[prop] != null) {
	    return cache[prop];
	  } // Check if 'transition' or 'transform' natively supported in browser.


	  if (prop === 'transition' || prop === 'transform') {
	    options[prop] = prop in el.style;
	  } // Find a plugin for current prefix property.


	  for (var i = 0; i < plugins_1.propertyDetectors.length; i++) {
	    cache[prop] = plugins_1.propertyDetectors[i](prop, el.style, options); // Break loop, if value found.

	    if (cache[prop]) break;
	  } // Reset styles for current property.
	  // Firefox can even throw an error for invalid properties, e.g., "0".


	  try {
	    el.style[prop] = '';
	  } catch (err) {
	    return false;
	  }

	  return cache[prop];
	}
	});

	unwrapExports(supportedProperty_1);

	var supportedValue_1 = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports['default'] = supportedValue;



	var _isInBrowser2 = _interopRequireDefault(_isInBrowser);



	var _prefix2 = _interopRequireDefault(prefix);



	var _supportedProperty2 = _interopRequireDefault(supportedProperty_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}

	var cache = {};
	var transitionProperties = {
	  transition: 1,
	  'transition-property': 1,
	  '-webkit-transition': 1,
	  '-webkit-transition-property': 1
	};
	var transPropsRegExp = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;
	var el = void 0;
	/**
	 * Returns prefixed value transition/transform if needed.
	 *
	 * @param {String} match
	 * @param {String} p1
	 * @param {String} p2
	 * @return {String}
	 * @api private
	 */

	function prefixTransitionCallback(match, p1, p2) {
	  if (p1 === 'all') return 'all';
	  if (p2 === 'all') return ', all';
	  return p1 ? (0, _supportedProperty2['default'])(p1) : ', ' + (0, _supportedProperty2['default'])(p2);
	}

	if (_isInBrowser2['default']) el = document.createElement('p');
	/**
	 * Returns prefixed value if needed. Returns `false` if value is not supported.
	 *
	 * @param {String} property
	 * @param {String} value
	 * @return {String|Boolean}
	 * @api public
	 */

	function supportedValue(property, value) {
	  // For server-side rendering.
	  if (!el) return value; // It is a string or a number as a string like '1'.
	  // We want only prefixable values here.
	  // eslint-disable-next-line no-restricted-globals

	  if (typeof value !== 'string' || !isNaN(parseInt(value, 10))) {
	    return value;
	  } // Create cache key for current value.


	  var cacheKey = property + value; // Remove cache for benchmark tests or return value from cache.

	  if (cache[cacheKey] != null) {
	    return cache[cacheKey];
	  } // IE can even throw an error in some cases, for e.g. style.content = 'bar'.


	  try {
	    // Test value as it is.
	    el.style[property] = value;
	  } catch (err) {
	    // Return false if value not supported.
	    cache[cacheKey] = false;
	    return false;
	  } // If 'transition' or 'transition-property' property.


	  if (transitionProperties[property]) {
	    value = value.replace(transPropsRegExp, prefixTransitionCallback);
	  } else if (el.style[property] === '') {
	    // Value with a vendor prefix.
	    value = _prefix2['default'].css + value; // Hardcode test to convert "flex" to "-ms-flexbox" for IE10.

	    if (value === '-ms-flex') value = '-ms-flexbox'; // Test prefixed value.

	    el.style[property] = value; // Return false if value not supported.

	    if (el.style[property] === '') {
	      cache[cacheKey] = false;
	      return false;
	    }
	  } // Reset styles for current property.


	  el.style[property] = ''; // Write current value to cache.

	  cache[cacheKey] = value;
	  return cache[cacheKey];
	}
	});

	unwrapExports(supportedValue_1);

	var lib = createCommonjsModule(function (module, exports) {

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.supportedValue = exports.supportedProperty = exports.supportedKeyframes = exports.prefix = undefined;



	var _prefix2 = _interopRequireDefault(prefix);



	var _supportedKeyframes2 = _interopRequireDefault(supportedKeyframes_1);



	var _supportedProperty2 = _interopRequireDefault(supportedProperty_1);



	var _supportedValue2 = _interopRequireDefault(supportedValue_1);

	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : {
	    'default': obj
	  };
	}
	/**
	 * CSS Vendor prefix detection and property feature testing.
	 *
	 * @copyright Oleg Slobodskoi 2015
	 * @website https://github.com/jsstyles/css-vendor
	 * @license MIT
	 */


	exports['default'] = {
	  prefix: _prefix2['default'],
	  supportedKeyframes: _supportedKeyframes2['default'],
	  supportedProperty: _supportedProperty2['default'],
	  supportedValue: _supportedValue2['default']
	};
	exports.prefix = _prefix2['default'];
	exports.supportedKeyframes = _supportedKeyframes2['default'];
	exports.supportedProperty = _supportedProperty2['default'];
	exports.supportedValue = _supportedValue2['default'];
	});

	unwrapExports(lib);
	var lib_1 = lib.supportedValue;
	var lib_2 = lib.supportedProperty;
	var lib_3 = lib.supportedKeyframes;
	var lib_4 = lib.prefix;

	/**
	 * Add vendor prefix to a property name when needed.
	 *
	 * @api public
	 */

	function jssVendorPrefixer() {
	  function onProcessRule(rule) {
	    if (rule.type === 'keyframes') {
	      var atRule = rule;
	      atRule.at = lib_3(atRule.at);
	    }
	  }

	  function onProcessStyle(style, rule) {
	    if (rule.type !== 'style') return style;

	    for (var prop in style) {
	      var value = style[prop];
	      var changeProp = false;
	      var supportedProp = lib_2(prop);
	      if (supportedProp && supportedProp !== prop) changeProp = true;
	      var changeValue = false;
	      var supportedValue = lib_1(supportedProp, jss.toCssValue(value));
	      if (supportedValue && supportedValue !== value) changeValue = true;

	      if (changeProp || changeValue) {
	        if (changeProp) delete style[prop];
	        style[supportedProp || prop] = supportedValue || value;
	      }
	    }

	    return style;
	  }

	  function onChangeValue(value, prop) {
	    return lib_1(prop, jss.toCssValue(value)) || value;
	  }

	  return {
	    onProcessRule: onProcessRule,
	    onProcessStyle: onProcessStyle,
	    onChangeValue: onChangeValue
	  };
	}

	exports.default = jssVendorPrefixer;

	Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=jss-plugin-vendor-prefixer.js.map
