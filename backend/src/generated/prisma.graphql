# source: http://localhost:4466
# timestamp: Wed Mar 13 2019 22:59:09 GMT-0700 (Pacific Daylight Time)

type AggregateChat {
  count: Int!
}

type AggregateDirectMessage {
  count: Int!
}

type AggregateEvent {
  count: Int!
}

type AggregateGenre {
  count: Int!
}

type AggregateProfilePic {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

enum Category {
  MUSIC
  ARTS_THEATRE
  SPORTS
  MISCELLANEOUS
}

type Chat implements Node {
  id: ID!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  messages(where: DirectMessageWhereInput, orderBy: DirectMessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DirectMessage!]
}

"""A connection to a list of items."""
type ChatConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ChatEdge]!
  aggregate: AggregateChat!
}

input ChatCreateInput {
  users: UserCreateManyWithoutChatsInput
  messages: DirectMessageCreateManyWithoutChatInput
}

input ChatCreateManyWithoutUsersInput {
  create: [ChatCreateWithoutUsersInput!]
  connect: [ChatWhereUniqueInput!]
}

input ChatCreateOneWithoutMessagesInput {
  create: ChatCreateWithoutMessagesInput
  connect: ChatWhereUniqueInput
}

input ChatCreateWithoutMessagesInput {
  users: UserCreateManyWithoutChatsInput
}

input ChatCreateWithoutUsersInput {
  messages: DirectMessageCreateManyWithoutChatInput
}

"""An edge in a connection."""
type ChatEdge {
  """The item at the end of the edge."""
  node: Chat!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ChatOrderByInput {
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ChatPreviousValues {
  id: ID!
}

input ChatScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ChatScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ChatScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ChatScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
}

type ChatSubscriptionPayload {
  mutation: MutationType!
  node: Chat
  updatedFields: [String!]
  previousValues: ChatPreviousValues
}

input ChatSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ChatSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ChatSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ChatSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ChatWhereInput
}

input ChatUpdateInput {
  users: UserUpdateManyWithoutChatsInput
  messages: DirectMessageUpdateManyWithoutChatInput
}

input ChatUpdateManyWithoutUsersInput {
  create: [ChatCreateWithoutUsersInput!]
  connect: [ChatWhereUniqueInput!]
  set: [ChatWhereUniqueInput!]
  disconnect: [ChatWhereUniqueInput!]
  delete: [ChatWhereUniqueInput!]
  update: [ChatUpdateWithWhereUniqueWithoutUsersInput!]
  deleteMany: [ChatScalarWhereInput!]
  upsert: [ChatUpsertWithWhereUniqueWithoutUsersInput!]
}

input ChatUpdateOneRequiredWithoutMessagesInput {
  create: ChatCreateWithoutMessagesInput
  connect: ChatWhereUniqueInput
  update: ChatUpdateWithoutMessagesDataInput
  upsert: ChatUpsertWithoutMessagesInput
}

input ChatUpdateWithoutMessagesDataInput {
  users: UserUpdateManyWithoutChatsInput
}

input ChatUpdateWithoutUsersDataInput {
  messages: DirectMessageUpdateManyWithoutChatInput
}

input ChatUpdateWithWhereUniqueWithoutUsersInput {
  where: ChatWhereUniqueInput!
  data: ChatUpdateWithoutUsersDataInput!
}

input ChatUpsertWithoutMessagesInput {
  update: ChatUpdateWithoutMessagesDataInput!
  create: ChatCreateWithoutMessagesInput!
}

input ChatUpsertWithWhereUniqueWithoutUsersInput {
  where: ChatWhereUniqueInput!
  update: ChatUpdateWithoutUsersDataInput!
  create: ChatCreateWithoutUsersInput!
}

input ChatWhereInput {
  """Logical AND on all given filters."""
  AND: [ChatWhereInput!]

  """Logical OR on all given filters."""
  OR: [ChatWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ChatWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  users_every: UserWhereInput
  users_some: UserWhereInput
  users_none: UserWhereInput
  messages_every: DirectMessageWhereInput
  messages_some: DirectMessageWhereInput
  messages_none: DirectMessageWhereInput
}

input ChatWhereUniqueInput {
  id: ID
}

scalar DateTime

type DirectMessage implements Node {
  id: ID!
  text: String!
  from: User!
  createdAt: DateTime!
  seen: Boolean
  updatedAt: DateTime!
  chat: Chat!
}

"""A connection to a list of items."""
type DirectMessageConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DirectMessageEdge]!
  aggregate: AggregateDirectMessage!
}

input DirectMessageCreateInput {
  text: String!
  seen: Boolean
  from: UserCreateOneInput!
  chat: ChatCreateOneWithoutMessagesInput!
}

input DirectMessageCreateManyWithoutChatInput {
  create: [DirectMessageCreateWithoutChatInput!]
  connect: [DirectMessageWhereUniqueInput!]
}

input DirectMessageCreateWithoutChatInput {
  text: String!
  seen: Boolean
  from: UserCreateOneInput!
}

"""An edge in a connection."""
type DirectMessageEdge {
  """The item at the end of the edge."""
  node: DirectMessage!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DirectMessageOrderByInput {
  id_ASC
  id_DESC
  text_ASC
  text_DESC
  createdAt_ASC
  createdAt_DESC
  seen_ASC
  seen_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DirectMessagePreviousValues {
  id: ID!
  text: String!
  createdAt: DateTime!
  seen: Boolean
  updatedAt: DateTime!
}

input DirectMessageScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [DirectMessageScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [DirectMessageScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DirectMessageScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  seen: Boolean

  """All values that are not equal to given value."""
  seen_not: Boolean
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type DirectMessageSubscriptionPayload {
  mutation: MutationType!
  node: DirectMessage
  updatedFields: [String!]
  previousValues: DirectMessagePreviousValues
}

input DirectMessageSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DirectMessageSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DirectMessageSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DirectMessageSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DirectMessageWhereInput
}

input DirectMessageUpdateInput {
  text: String
  seen: Boolean
  from: UserUpdateOneRequiredInput
  chat: ChatUpdateOneRequiredWithoutMessagesInput
}

input DirectMessageUpdateManyDataInput {
  text: String
  seen: Boolean
}

input DirectMessageUpdateManyMutationInput {
  text: String
  seen: Boolean
}

input DirectMessageUpdateManyWithoutChatInput {
  create: [DirectMessageCreateWithoutChatInput!]
  connect: [DirectMessageWhereUniqueInput!]
  set: [DirectMessageWhereUniqueInput!]
  disconnect: [DirectMessageWhereUniqueInput!]
  delete: [DirectMessageWhereUniqueInput!]
  update: [DirectMessageUpdateWithWhereUniqueWithoutChatInput!]
  updateMany: [DirectMessageUpdateManyWithWhereNestedInput!]
  deleteMany: [DirectMessageScalarWhereInput!]
  upsert: [DirectMessageUpsertWithWhereUniqueWithoutChatInput!]
}

input DirectMessageUpdateManyWithWhereNestedInput {
  where: DirectMessageScalarWhereInput!
  data: DirectMessageUpdateManyDataInput!
}

input DirectMessageUpdateWithoutChatDataInput {
  text: String
  seen: Boolean
  from: UserUpdateOneRequiredInput
}

input DirectMessageUpdateWithWhereUniqueWithoutChatInput {
  where: DirectMessageWhereUniqueInput!
  data: DirectMessageUpdateWithoutChatDataInput!
}

input DirectMessageUpsertWithWhereUniqueWithoutChatInput {
  where: DirectMessageWhereUniqueInput!
  update: DirectMessageUpdateWithoutChatDataInput!
  create: DirectMessageCreateWithoutChatInput!
}

input DirectMessageWhereInput {
  """Logical AND on all given filters."""
  AND: [DirectMessageWhereInput!]

  """Logical OR on all given filters."""
  OR: [DirectMessageWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DirectMessageWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  seen: Boolean

  """All values that are not equal to given value."""
  seen_not: Boolean
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  from: UserWhereInput
  chat: ChatWhereInput
}

input DirectMessageWhereUniqueInput {
  id: ID
}

type Event implements Node {
  id: ID!
  eventfulID: String
  title: String
  genre: String
  description: String
  attending(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  times: [String!]!
  location: String
  image_url: String
  url: String
  city: String
  venue: String
  address: String
  lat: String
  long: String
}

"""A connection to a list of items."""
type EventConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [EventEdge]!
  aggregate: AggregateEvent!
}

input EventCreateInput {
  eventfulID: String
  title: String
  genre: String
  description: String
  location: String
  image_url: String
  url: String
  city: String
  venue: String
  address: String
  lat: String
  long: String
  times: EventCreatetimesInput
  attending: UserCreateManyWithoutEventsInput
}

input EventCreateManyWithoutAttendingInput {
  create: [EventCreateWithoutAttendingInput!]
  connect: [EventWhereUniqueInput!]
}

input EventCreatetimesInput {
  set: [String!]
}

input EventCreateWithoutAttendingInput {
  eventfulID: String
  title: String
  genre: String
  description: String
  location: String
  image_url: String
  url: String
  city: String
  venue: String
  address: String
  lat: String
  long: String
  times: EventCreatetimesInput
}

"""An edge in a connection."""
type EventEdge {
  """The item at the end of the edge."""
  node: Event!

  """A cursor for use in pagination."""
  cursor: String!
}

enum EventOrderByInput {
  id_ASC
  id_DESC
  eventfulID_ASC
  eventfulID_DESC
  title_ASC
  title_DESC
  genre_ASC
  genre_DESC
  description_ASC
  description_DESC
  location_ASC
  location_DESC
  image_url_ASC
  image_url_DESC
  url_ASC
  url_DESC
  city_ASC
  city_DESC
  venue_ASC
  venue_DESC
  address_ASC
  address_DESC
  lat_ASC
  lat_DESC
  long_ASC
  long_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type EventPreviousValues {
  id: ID!
  eventfulID: String
  title: String
  genre: String
  description: String
  times: [String!]!
  location: String
  image_url: String
  url: String
  city: String
  venue: String
  address: String
  lat: String
  long: String
}

input EventScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [EventScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [EventScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [EventScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  eventfulID: String

  """All values that are not equal to given value."""
  eventfulID_not: String

  """All values that are contained in given list."""
  eventfulID_in: [String!]

  """All values that are not contained in given list."""
  eventfulID_not_in: [String!]

  """All values less than the given value."""
  eventfulID_lt: String

  """All values less than or equal the given value."""
  eventfulID_lte: String

  """All values greater than the given value."""
  eventfulID_gt: String

  """All values greater than or equal the given value."""
  eventfulID_gte: String

  """All values containing the given string."""
  eventfulID_contains: String

  """All values not containing the given string."""
  eventfulID_not_contains: String

  """All values starting with the given string."""
  eventfulID_starts_with: String

  """All values not starting with the given string."""
  eventfulID_not_starts_with: String

  """All values ending with the given string."""
  eventfulID_ends_with: String

  """All values not ending with the given string."""
  eventfulID_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  genre: String

  """All values that are not equal to given value."""
  genre_not: String

  """All values that are contained in given list."""
  genre_in: [String!]

  """All values that are not contained in given list."""
  genre_not_in: [String!]

  """All values less than the given value."""
  genre_lt: String

  """All values less than or equal the given value."""
  genre_lte: String

  """All values greater than the given value."""
  genre_gt: String

  """All values greater than or equal the given value."""
  genre_gte: String

  """All values containing the given string."""
  genre_contains: String

  """All values not containing the given string."""
  genre_not_contains: String

  """All values starting with the given string."""
  genre_starts_with: String

  """All values not starting with the given string."""
  genre_not_starts_with: String

  """All values ending with the given string."""
  genre_ends_with: String

  """All values not ending with the given string."""
  genre_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  image_url: String

  """All values that are not equal to given value."""
  image_url_not: String

  """All values that are contained in given list."""
  image_url_in: [String!]

  """All values that are not contained in given list."""
  image_url_not_in: [String!]

  """All values less than the given value."""
  image_url_lt: String

  """All values less than or equal the given value."""
  image_url_lte: String

  """All values greater than the given value."""
  image_url_gt: String

  """All values greater than or equal the given value."""
  image_url_gte: String

  """All values containing the given string."""
  image_url_contains: String

  """All values not containing the given string."""
  image_url_not_contains: String

  """All values starting with the given string."""
  image_url_starts_with: String

  """All values not starting with the given string."""
  image_url_not_starts_with: String

  """All values ending with the given string."""
  image_url_ends_with: String

  """All values not ending with the given string."""
  image_url_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  venue: String

  """All values that are not equal to given value."""
  venue_not: String

  """All values that are contained in given list."""
  venue_in: [String!]

  """All values that are not contained in given list."""
  venue_not_in: [String!]

  """All values less than the given value."""
  venue_lt: String

  """All values less than or equal the given value."""
  venue_lte: String

  """All values greater than the given value."""
  venue_gt: String

  """All values greater than or equal the given value."""
  venue_gte: String

  """All values containing the given string."""
  venue_contains: String

  """All values not containing the given string."""
  venue_not_contains: String

  """All values starting with the given string."""
  venue_starts_with: String

  """All values not starting with the given string."""
  venue_not_starts_with: String

  """All values ending with the given string."""
  venue_ends_with: String

  """All values not ending with the given string."""
  venue_not_ends_with: String
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  lat: String

  """All values that are not equal to given value."""
  lat_not: String

  """All values that are contained in given list."""
  lat_in: [String!]

  """All values that are not contained in given list."""
  lat_not_in: [String!]

  """All values less than the given value."""
  lat_lt: String

  """All values less than or equal the given value."""
  lat_lte: String

  """All values greater than the given value."""
  lat_gt: String

  """All values greater than or equal the given value."""
  lat_gte: String

  """All values containing the given string."""
  lat_contains: String

  """All values not containing the given string."""
  lat_not_contains: String

  """All values starting with the given string."""
  lat_starts_with: String

  """All values not starting with the given string."""
  lat_not_starts_with: String

  """All values ending with the given string."""
  lat_ends_with: String

  """All values not ending with the given string."""
  lat_not_ends_with: String
  long: String

  """All values that are not equal to given value."""
  long_not: String

  """All values that are contained in given list."""
  long_in: [String!]

  """All values that are not contained in given list."""
  long_not_in: [String!]

  """All values less than the given value."""
  long_lt: String

  """All values less than or equal the given value."""
  long_lte: String

  """All values greater than the given value."""
  long_gt: String

  """All values greater than or equal the given value."""
  long_gte: String

  """All values containing the given string."""
  long_contains: String

  """All values not containing the given string."""
  long_not_contains: String

  """All values starting with the given string."""
  long_starts_with: String

  """All values not starting with the given string."""
  long_not_starts_with: String

  """All values ending with the given string."""
  long_ends_with: String

  """All values not ending with the given string."""
  long_not_ends_with: String
}

type EventSubscriptionPayload {
  mutation: MutationType!
  node: Event
  updatedFields: [String!]
  previousValues: EventPreviousValues
}

input EventSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [EventSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [EventSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [EventSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: EventWhereInput
}

input EventUpdateInput {
  eventfulID: String
  title: String
  genre: String
  description: String
  location: String
  image_url: String
  url: String
  city: String
  venue: String
  address: String
  lat: String
  long: String
  times: EventUpdatetimesInput
  attending: UserUpdateManyWithoutEventsInput
}

input EventUpdateManyDataInput {
  eventfulID: String
  title: String
  genre: String
  description: String
  location: String
  image_url: String
  url: String
  city: String
  venue: String
  address: String
  lat: String
  long: String
  times: EventUpdatetimesInput
}

input EventUpdateManyMutationInput {
  eventfulID: String
  title: String
  genre: String
  description: String
  location: String
  image_url: String
  url: String
  city: String
  venue: String
  address: String
  lat: String
  long: String
  times: EventUpdatetimesInput
}

input EventUpdateManyWithoutAttendingInput {
  create: [EventCreateWithoutAttendingInput!]
  connect: [EventWhereUniqueInput!]
  set: [EventWhereUniqueInput!]
  disconnect: [EventWhereUniqueInput!]
  delete: [EventWhereUniqueInput!]
  update: [EventUpdateWithWhereUniqueWithoutAttendingInput!]
  updateMany: [EventUpdateManyWithWhereNestedInput!]
  deleteMany: [EventScalarWhereInput!]
  upsert: [EventUpsertWithWhereUniqueWithoutAttendingInput!]
}

input EventUpdateManyWithWhereNestedInput {
  where: EventScalarWhereInput!
  data: EventUpdateManyDataInput!
}

input EventUpdatetimesInput {
  set: [String!]
}

input EventUpdateWithoutAttendingDataInput {
  eventfulID: String
  title: String
  genre: String
  description: String
  location: String
  image_url: String
  url: String
  city: String
  venue: String
  address: String
  lat: String
  long: String
  times: EventUpdatetimesInput
}

input EventUpdateWithWhereUniqueWithoutAttendingInput {
  where: EventWhereUniqueInput!
  data: EventUpdateWithoutAttendingDataInput!
}

input EventUpsertWithWhereUniqueWithoutAttendingInput {
  where: EventWhereUniqueInput!
  update: EventUpdateWithoutAttendingDataInput!
  create: EventCreateWithoutAttendingInput!
}

input EventWhereInput {
  """Logical AND on all given filters."""
  AND: [EventWhereInput!]

  """Logical OR on all given filters."""
  OR: [EventWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [EventWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  eventfulID: String

  """All values that are not equal to given value."""
  eventfulID_not: String

  """All values that are contained in given list."""
  eventfulID_in: [String!]

  """All values that are not contained in given list."""
  eventfulID_not_in: [String!]

  """All values less than the given value."""
  eventfulID_lt: String

  """All values less than or equal the given value."""
  eventfulID_lte: String

  """All values greater than the given value."""
  eventfulID_gt: String

  """All values greater than or equal the given value."""
  eventfulID_gte: String

  """All values containing the given string."""
  eventfulID_contains: String

  """All values not containing the given string."""
  eventfulID_not_contains: String

  """All values starting with the given string."""
  eventfulID_starts_with: String

  """All values not starting with the given string."""
  eventfulID_not_starts_with: String

  """All values ending with the given string."""
  eventfulID_ends_with: String

  """All values not ending with the given string."""
  eventfulID_not_ends_with: String
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  genre: String

  """All values that are not equal to given value."""
  genre_not: String

  """All values that are contained in given list."""
  genre_in: [String!]

  """All values that are not contained in given list."""
  genre_not_in: [String!]

  """All values less than the given value."""
  genre_lt: String

  """All values less than or equal the given value."""
  genre_lte: String

  """All values greater than the given value."""
  genre_gt: String

  """All values greater than or equal the given value."""
  genre_gte: String

  """All values containing the given string."""
  genre_contains: String

  """All values not containing the given string."""
  genre_not_contains: String

  """All values starting with the given string."""
  genre_starts_with: String

  """All values not starting with the given string."""
  genre_not_starts_with: String

  """All values ending with the given string."""
  genre_ends_with: String

  """All values not ending with the given string."""
  genre_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  image_url: String

  """All values that are not equal to given value."""
  image_url_not: String

  """All values that are contained in given list."""
  image_url_in: [String!]

  """All values that are not contained in given list."""
  image_url_not_in: [String!]

  """All values less than the given value."""
  image_url_lt: String

  """All values less than or equal the given value."""
  image_url_lte: String

  """All values greater than the given value."""
  image_url_gt: String

  """All values greater than or equal the given value."""
  image_url_gte: String

  """All values containing the given string."""
  image_url_contains: String

  """All values not containing the given string."""
  image_url_not_contains: String

  """All values starting with the given string."""
  image_url_starts_with: String

  """All values not starting with the given string."""
  image_url_not_starts_with: String

  """All values ending with the given string."""
  image_url_ends_with: String

  """All values not ending with the given string."""
  image_url_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  city: String

  """All values that are not equal to given value."""
  city_not: String

  """All values that are contained in given list."""
  city_in: [String!]

  """All values that are not contained in given list."""
  city_not_in: [String!]

  """All values less than the given value."""
  city_lt: String

  """All values less than or equal the given value."""
  city_lte: String

  """All values greater than the given value."""
  city_gt: String

  """All values greater than or equal the given value."""
  city_gte: String

  """All values containing the given string."""
  city_contains: String

  """All values not containing the given string."""
  city_not_contains: String

  """All values starting with the given string."""
  city_starts_with: String

  """All values not starting with the given string."""
  city_not_starts_with: String

  """All values ending with the given string."""
  city_ends_with: String

  """All values not ending with the given string."""
  city_not_ends_with: String
  venue: String

  """All values that are not equal to given value."""
  venue_not: String

  """All values that are contained in given list."""
  venue_in: [String!]

  """All values that are not contained in given list."""
  venue_not_in: [String!]

  """All values less than the given value."""
  venue_lt: String

  """All values less than or equal the given value."""
  venue_lte: String

  """All values greater than the given value."""
  venue_gt: String

  """All values greater than or equal the given value."""
  venue_gte: String

  """All values containing the given string."""
  venue_contains: String

  """All values not containing the given string."""
  venue_not_contains: String

  """All values starting with the given string."""
  venue_starts_with: String

  """All values not starting with the given string."""
  venue_not_starts_with: String

  """All values ending with the given string."""
  venue_ends_with: String

  """All values not ending with the given string."""
  venue_not_ends_with: String
  address: String

  """All values that are not equal to given value."""
  address_not: String

  """All values that are contained in given list."""
  address_in: [String!]

  """All values that are not contained in given list."""
  address_not_in: [String!]

  """All values less than the given value."""
  address_lt: String

  """All values less than or equal the given value."""
  address_lte: String

  """All values greater than the given value."""
  address_gt: String

  """All values greater than or equal the given value."""
  address_gte: String

  """All values containing the given string."""
  address_contains: String

  """All values not containing the given string."""
  address_not_contains: String

  """All values starting with the given string."""
  address_starts_with: String

  """All values not starting with the given string."""
  address_not_starts_with: String

  """All values ending with the given string."""
  address_ends_with: String

  """All values not ending with the given string."""
  address_not_ends_with: String
  lat: String

  """All values that are not equal to given value."""
  lat_not: String

  """All values that are contained in given list."""
  lat_in: [String!]

  """All values that are not contained in given list."""
  lat_not_in: [String!]

  """All values less than the given value."""
  lat_lt: String

  """All values less than or equal the given value."""
  lat_lte: String

  """All values greater than the given value."""
  lat_gt: String

  """All values greater than or equal the given value."""
  lat_gte: String

  """All values containing the given string."""
  lat_contains: String

  """All values not containing the given string."""
  lat_not_contains: String

  """All values starting with the given string."""
  lat_starts_with: String

  """All values not starting with the given string."""
  lat_not_starts_with: String

  """All values ending with the given string."""
  lat_ends_with: String

  """All values not ending with the given string."""
  lat_not_ends_with: String
  long: String

  """All values that are not equal to given value."""
  long_not: String

  """All values that are contained in given list."""
  long_in: [String!]

  """All values that are not contained in given list."""
  long_not_in: [String!]

  """All values less than the given value."""
  long_lt: String

  """All values less than or equal the given value."""
  long_lte: String

  """All values greater than the given value."""
  long_gt: String

  """All values greater than or equal the given value."""
  long_gte: String

  """All values containing the given string."""
  long_contains: String

  """All values not containing the given string."""
  long_not_contains: String

  """All values starting with the given string."""
  long_starts_with: String

  """All values not starting with the given string."""
  long_not_starts_with: String

  """All values ending with the given string."""
  long_ends_with: String

  """All values not ending with the given string."""
  long_not_ends_with: String
  attending_every: UserWhereInput
  attending_some: UserWhereInput
  attending_none: UserWhereInput
}

input EventWhereUniqueInput {
  id: ID
  eventfulID: String
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

type Genre implements Node {
  id: ID!
  tmID: String!
  category: Category!
  name: String!
}

"""A connection to a list of items."""
type GenreConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [GenreEdge]!
  aggregate: AggregateGenre!
}

input GenreCreateInput {
  tmID: String!
  category: Category!
  name: String!
}

input GenreCreateManyInput {
  create: [GenreCreateInput!]
  connect: [GenreWhereUniqueInput!]
}

"""An edge in a connection."""
type GenreEdge {
  """The item at the end of the edge."""
  node: Genre!

  """A cursor for use in pagination."""
  cursor: String!
}

enum GenreOrderByInput {
  id_ASC
  id_DESC
  tmID_ASC
  tmID_DESC
  category_ASC
  category_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type GenrePreviousValues {
  id: ID!
  tmID: String!
  category: Category!
  name: String!
}

input GenreScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [GenreScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [GenreScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GenreScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  tmID: String

  """All values that are not equal to given value."""
  tmID_not: String

  """All values that are contained in given list."""
  tmID_in: [String!]

  """All values that are not contained in given list."""
  tmID_not_in: [String!]

  """All values less than the given value."""
  tmID_lt: String

  """All values less than or equal the given value."""
  tmID_lte: String

  """All values greater than the given value."""
  tmID_gt: String

  """All values greater than or equal the given value."""
  tmID_gte: String

  """All values containing the given string."""
  tmID_contains: String

  """All values not containing the given string."""
  tmID_not_contains: String

  """All values starting with the given string."""
  tmID_starts_with: String

  """All values not starting with the given string."""
  tmID_not_starts_with: String

  """All values ending with the given string."""
  tmID_ends_with: String

  """All values not ending with the given string."""
  tmID_not_ends_with: String
  category: Category

  """All values that are not equal to given value."""
  category_not: Category

  """All values that are contained in given list."""
  category_in: [Category!]

  """All values that are not contained in given list."""
  category_not_in: [Category!]
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
}

type GenreSubscriptionPayload {
  mutation: MutationType!
  node: Genre
  updatedFields: [String!]
  previousValues: GenrePreviousValues
}

input GenreSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [GenreSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [GenreSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GenreSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GenreWhereInput
}

input GenreUpdateDataInput {
  tmID: String
  category: Category
  name: String
}

input GenreUpdateInput {
  tmID: String
  category: Category
  name: String
}

input GenreUpdateManyDataInput {
  tmID: String
  category: Category
  name: String
}

input GenreUpdateManyInput {
  create: [GenreCreateInput!]
  connect: [GenreWhereUniqueInput!]
  set: [GenreWhereUniqueInput!]
  disconnect: [GenreWhereUniqueInput!]
  delete: [GenreWhereUniqueInput!]
  update: [GenreUpdateWithWhereUniqueNestedInput!]
  updateMany: [GenreUpdateManyWithWhereNestedInput!]
  deleteMany: [GenreScalarWhereInput!]
  upsert: [GenreUpsertWithWhereUniqueNestedInput!]
}

input GenreUpdateManyMutationInput {
  tmID: String
  category: Category
  name: String
}

input GenreUpdateManyWithWhereNestedInput {
  where: GenreScalarWhereInput!
  data: GenreUpdateManyDataInput!
}

input GenreUpdateWithWhereUniqueNestedInput {
  where: GenreWhereUniqueInput!
  data: GenreUpdateDataInput!
}

input GenreUpsertWithWhereUniqueNestedInput {
  where: GenreWhereUniqueInput!
  update: GenreUpdateDataInput!
  create: GenreCreateInput!
}

input GenreWhereInput {
  """Logical AND on all given filters."""
  AND: [GenreWhereInput!]

  """Logical OR on all given filters."""
  OR: [GenreWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [GenreWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  tmID: String

  """All values that are not equal to given value."""
  tmID_not: String

  """All values that are contained in given list."""
  tmID_in: [String!]

  """All values that are not contained in given list."""
  tmID_not_in: [String!]

  """All values less than the given value."""
  tmID_lt: String

  """All values less than or equal the given value."""
  tmID_lte: String

  """All values greater than the given value."""
  tmID_gt: String

  """All values greater than or equal the given value."""
  tmID_gte: String

  """All values containing the given string."""
  tmID_contains: String

  """All values not containing the given string."""
  tmID_not_contains: String

  """All values starting with the given string."""
  tmID_starts_with: String

  """All values not starting with the given string."""
  tmID_not_starts_with: String

  """All values ending with the given string."""
  tmID_ends_with: String

  """All values not ending with the given string."""
  tmID_not_ends_with: String
  category: Category

  """All values that are not equal to given value."""
  category_not: Category

  """All values that are contained in given list."""
  category_in: [Category!]

  """All values that are not contained in given list."""
  category_not_in: [Category!]
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
}

input GenreWhereUniqueInput {
  id: ID
}

"""Raw JSON value"""
scalar Json

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createChat(data: ChatCreateInput!): Chat!
  createDirectMessage(data: DirectMessageCreateInput!): DirectMessage!
  createProfilePic(data: ProfilePicCreateInput!): ProfilePic!
  createEvent(data: EventCreateInput!): Event!
  createGenre(data: GenreCreateInput!): Genre!
  createUser(data: UserCreateInput!): User!
  updateChat(data: ChatUpdateInput!, where: ChatWhereUniqueInput!): Chat
  updateDirectMessage(data: DirectMessageUpdateInput!, where: DirectMessageWhereUniqueInput!): DirectMessage
  updateProfilePic(data: ProfilePicUpdateInput!, where: ProfilePicWhereUniqueInput!): ProfilePic
  updateEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event
  updateGenre(data: GenreUpdateInput!, where: GenreWhereUniqueInput!): Genre
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteChat(where: ChatWhereUniqueInput!): Chat
  deleteDirectMessage(where: DirectMessageWhereUniqueInput!): DirectMessage
  deleteProfilePic(where: ProfilePicWhereUniqueInput!): ProfilePic
  deleteEvent(where: EventWhereUniqueInput!): Event
  deleteGenre(where: GenreWhereUniqueInput!): Genre
  deleteUser(where: UserWhereUniqueInput!): User
  upsertChat(where: ChatWhereUniqueInput!, create: ChatCreateInput!, update: ChatUpdateInput!): Chat!
  upsertDirectMessage(where: DirectMessageWhereUniqueInput!, create: DirectMessageCreateInput!, update: DirectMessageUpdateInput!): DirectMessage!
  upsertProfilePic(where: ProfilePicWhereUniqueInput!, create: ProfilePicCreateInput!, update: ProfilePicUpdateInput!): ProfilePic!
  upsertEvent(where: EventWhereUniqueInput!, create: EventCreateInput!, update: EventUpdateInput!): Event!
  upsertGenre(where: GenreWhereUniqueInput!, create: GenreCreateInput!, update: GenreUpdateInput!): Genre!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyDirectMessages(data: DirectMessageUpdateManyMutationInput!, where: DirectMessageWhereInput): BatchPayload!
  updateManyProfilePics(data: ProfilePicUpdateManyMutationInput!, where: ProfilePicWhereInput): BatchPayload!
  updateManyEvents(data: EventUpdateManyMutationInput!, where: EventWhereInput): BatchPayload!
  updateManyGenres(data: GenreUpdateManyMutationInput!, where: GenreWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  deleteManyChats(where: ChatWhereInput): BatchPayload!
  deleteManyDirectMessages(where: DirectMessageWhereInput): BatchPayload!
  deleteManyProfilePics(where: ProfilePicWhereInput): BatchPayload!
  deleteManyEvents(where: EventWhereInput): BatchPayload!
  deleteManyGenres(where: GenreWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  executeRaw(database: PrismaDatabase, query: String!): Json!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  FREE
  MONTHLY
  YEARLY
  ADMIN
}

enum PrismaDatabase {
  default
}

type ProfilePic implements Node {
  id: ID!
  user: User!
  img_url: String!
  default: Boolean!
}

"""A connection to a list of items."""
type ProfilePicConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProfilePicEdge]!
  aggregate: AggregateProfilePic!
}

input ProfilePicCreateInput {
  img_url: String!
  default: Boolean
  user: UserCreateOneWithoutImgInput!
}

input ProfilePicCreateManyWithoutUserInput {
  create: [ProfilePicCreateWithoutUserInput!]
  connect: [ProfilePicWhereUniqueInput!]
}

input ProfilePicCreateWithoutUserInput {
  img_url: String!
  default: Boolean
}

"""An edge in a connection."""
type ProfilePicEdge {
  """The item at the end of the edge."""
  node: ProfilePic!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProfilePicOrderByInput {
  id_ASC
  id_DESC
  img_url_ASC
  img_url_DESC
  default_ASC
  default_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type ProfilePicPreviousValues {
  id: ID!
  img_url: String!
  default: Boolean!
}

input ProfilePicScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfilePicScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfilePicScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfilePicScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  img_url: String

  """All values that are not equal to given value."""
  img_url_not: String

  """All values that are contained in given list."""
  img_url_in: [String!]

  """All values that are not contained in given list."""
  img_url_not_in: [String!]

  """All values less than the given value."""
  img_url_lt: String

  """All values less than or equal the given value."""
  img_url_lte: String

  """All values greater than the given value."""
  img_url_gt: String

  """All values greater than or equal the given value."""
  img_url_gte: String

  """All values containing the given string."""
  img_url_contains: String

  """All values not containing the given string."""
  img_url_not_contains: String

  """All values starting with the given string."""
  img_url_starts_with: String

  """All values not starting with the given string."""
  img_url_not_starts_with: String

  """All values ending with the given string."""
  img_url_ends_with: String

  """All values not ending with the given string."""
  img_url_not_ends_with: String
  default: Boolean

  """All values that are not equal to given value."""
  default_not: Boolean
}

type ProfilePicSubscriptionPayload {
  mutation: MutationType!
  node: ProfilePic
  updatedFields: [String!]
  previousValues: ProfilePicPreviousValues
}

input ProfilePicSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfilePicSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfilePicSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfilePicSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProfilePicWhereInput
}

input ProfilePicUpdateInput {
  img_url: String
  default: Boolean
  user: UserUpdateOneRequiredWithoutImgInput
}

input ProfilePicUpdateManyDataInput {
  img_url: String
  default: Boolean
}

input ProfilePicUpdateManyMutationInput {
  img_url: String
  default: Boolean
}

input ProfilePicUpdateManyWithoutUserInput {
  create: [ProfilePicCreateWithoutUserInput!]
  connect: [ProfilePicWhereUniqueInput!]
  set: [ProfilePicWhereUniqueInput!]
  disconnect: [ProfilePicWhereUniqueInput!]
  delete: [ProfilePicWhereUniqueInput!]
  update: [ProfilePicUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ProfilePicUpdateManyWithWhereNestedInput!]
  deleteMany: [ProfilePicScalarWhereInput!]
  upsert: [ProfilePicUpsertWithWhereUniqueWithoutUserInput!]
}

input ProfilePicUpdateManyWithWhereNestedInput {
  where: ProfilePicScalarWhereInput!
  data: ProfilePicUpdateManyDataInput!
}

input ProfilePicUpdateWithoutUserDataInput {
  img_url: String
  default: Boolean
}

input ProfilePicUpdateWithWhereUniqueWithoutUserInput {
  where: ProfilePicWhereUniqueInput!
  data: ProfilePicUpdateWithoutUserDataInput!
}

input ProfilePicUpsertWithWhereUniqueWithoutUserInput {
  where: ProfilePicWhereUniqueInput!
  update: ProfilePicUpdateWithoutUserDataInput!
  create: ProfilePicCreateWithoutUserInput!
}

input ProfilePicWhereInput {
  """Logical AND on all given filters."""
  AND: [ProfilePicWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProfilePicWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProfilePicWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  img_url: String

  """All values that are not equal to given value."""
  img_url_not: String

  """All values that are contained in given list."""
  img_url_in: [String!]

  """All values that are not contained in given list."""
  img_url_not_in: [String!]

  """All values less than the given value."""
  img_url_lt: String

  """All values less than or equal the given value."""
  img_url_lte: String

  """All values greater than the given value."""
  img_url_gt: String

  """All values greater than or equal the given value."""
  img_url_gte: String

  """All values containing the given string."""
  img_url_contains: String

  """All values not containing the given string."""
  img_url_not_contains: String

  """All values starting with the given string."""
  img_url_starts_with: String

  """All values not starting with the given string."""
  img_url_not_starts_with: String

  """All values ending with the given string."""
  img_url_ends_with: String

  """All values not ending with the given string."""
  img_url_not_ends_with: String
  default: Boolean

  """All values that are not equal to given value."""
  default_not: Boolean
  user: UserWhereInput
}

input ProfilePicWhereUniqueInput {
  id: ID
}

type Query {
  chats(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Chat]!
  directMessages(where: DirectMessageWhereInput, orderBy: DirectMessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DirectMessage]!
  profilePics(where: ProfilePicWhereInput, orderBy: ProfilePicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProfilePic]!
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event]!
  genres(where: GenreWhereInput, orderBy: GenreOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Genre]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  chat(where: ChatWhereUniqueInput!): Chat
  directMessage(where: DirectMessageWhereUniqueInput!): DirectMessage
  profilePic(where: ProfilePicWhereUniqueInput!): ProfilePic
  event(where: EventWhereUniqueInput!): Event
  genre(where: GenreWhereUniqueInput!): Genre
  user(where: UserWhereUniqueInput!): User
  chatsConnection(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ChatConnection!
  directMessagesConnection(where: DirectMessageWhereInput, orderBy: DirectMessageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DirectMessageConnection!
  profilePicsConnection(where: ProfilePicWhereInput, orderBy: ProfilePicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProfilePicConnection!
  eventsConnection(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EventConnection!
  genresConnection(where: GenreWhereInput, orderBy: GenreOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): GenreConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  chat(where: ChatSubscriptionWhereInput): ChatSubscriptionPayload
  directMessage(where: DirectMessageSubscriptionWhereInput): DirectMessageSubscriptionPayload
  profilePic(where: ProfilePicSubscriptionWhereInput): ProfilePicSubscriptionPayload
  event(where: EventSubscriptionWhereInput): EventSubscriptionPayload
  genre(where: GenreSubscriptionWhereInput): GenreSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User implements Node {
  id: ID!
  firstName: String!
  lastName: String!
  password: String!
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String!
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  img(where: ProfilePicWhereInput, orderBy: ProfilePicOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProfilePic!]
  resetToken: String
  resetTokenExpiry: Float
  interests(where: GenreWhereInput, orderBy: GenreOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Genre!]
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event!]
  genderPrefs: [Gender!]!
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission!
  createdAt: DateTime!
  updatedAt: DateTime!
  stripeCustomerId: String
  stripeSubscriptionId: String
  liked(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  blocked(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  chats(where: ChatWhereInput, orderBy: ChatOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Chat!]
  verified: Boolean
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreategenderPrefsInput {
  set: [Gender!]
}

input UserCreateInput {
  firstName: String!
  lastName: String!
  password: String!
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String!
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission!
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserCreategenderPrefsInput
  img: ProfilePicCreateManyWithoutUserInput
  interests: GenreCreateManyInput
  events: EventCreateManyWithoutAttendingInput
  liked: UserCreateManyInput
  blocked: UserCreateManyInput
  chats: ChatCreateManyWithoutUsersInput
}

input UserCreateManyInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutChatsInput {
  create: [UserCreateWithoutChatsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutEventsInput {
  create: [UserCreateWithoutEventsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutImgInput {
  create: UserCreateWithoutImgInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutChatsInput {
  firstName: String!
  lastName: String!
  password: String!
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String!
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission!
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserCreategenderPrefsInput
  img: ProfilePicCreateManyWithoutUserInput
  interests: GenreCreateManyInput
  events: EventCreateManyWithoutAttendingInput
  liked: UserCreateManyInput
  blocked: UserCreateManyInput
}

input UserCreateWithoutEventsInput {
  firstName: String!
  lastName: String!
  password: String!
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String!
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission!
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserCreategenderPrefsInput
  img: ProfilePicCreateManyWithoutUserInput
  interests: GenreCreateManyInput
  liked: UserCreateManyInput
  blocked: UserCreateManyInput
  chats: ChatCreateManyWithoutUsersInput
}

input UserCreateWithoutImgInput {
  firstName: String!
  lastName: String!
  password: String!
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String!
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission!
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserCreategenderPrefsInput
  interests: GenreCreateManyInput
  events: EventCreateManyWithoutAttendingInput
  liked: UserCreateManyInput
  blocked: UserCreateManyInput
  chats: ChatCreateManyWithoutUsersInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  password_ASC
  password_DESC
  gender_ASC
  gender_DESC
  age_ASC
  age_DESC
  dob_ASC
  dob_DESC
  location_ASC
  location_DESC
  email_ASC
  email_DESC
  phone_ASC
  phone_DESC
  biography_ASC
  biography_DESC
  imageThumbnail_ASC
  imageThumbnail_DESC
  imageLarge_ASC
  imageLarge_DESC
  resetToken_ASC
  resetToken_DESC
  resetTokenExpiry_ASC
  resetTokenExpiry_DESC
  minAgePref_ASC
  minAgePref_DESC
  maxAgePref_ASC
  maxAgePref_DESC
  permissions_ASC
  permissions_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  stripeCustomerId_ASC
  stripeCustomerId_DESC
  stripeSubscriptionId_ASC
  stripeSubscriptionId_DESC
  verified_ASC
  verified_DESC
}

type UserPreviousValues {
  id: ID!
  firstName: String!
  lastName: String!
  password: String!
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String!
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  genderPrefs: [Gender!]!
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission!
  createdAt: DateTime!
  updatedAt: DateTime!
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
}

input UserScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [UserScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  gender: Gender

  """All values that are not equal to given value."""
  gender_not: Gender

  """All values that are contained in given list."""
  gender_in: [Gender!]

  """All values that are not contained in given list."""
  gender_not_in: [Gender!]
  age: Int

  """All values that are not equal to given value."""
  age_not: Int

  """All values that are contained in given list."""
  age_in: [Int!]

  """All values that are not contained in given list."""
  age_not_in: [Int!]

  """All values less than the given value."""
  age_lt: Int

  """All values less than or equal the given value."""
  age_lte: Int

  """All values greater than the given value."""
  age_gt: Int

  """All values greater than or equal the given value."""
  age_gte: Int
  dob: String

  """All values that are not equal to given value."""
  dob_not: String

  """All values that are contained in given list."""
  dob_in: [String!]

  """All values that are not contained in given list."""
  dob_not_in: [String!]

  """All values less than the given value."""
  dob_lt: String

  """All values less than or equal the given value."""
  dob_lte: String

  """All values greater than the given value."""
  dob_gt: String

  """All values greater than or equal the given value."""
  dob_gte: String

  """All values containing the given string."""
  dob_contains: String

  """All values not containing the given string."""
  dob_not_contains: String

  """All values starting with the given string."""
  dob_starts_with: String

  """All values not starting with the given string."""
  dob_not_starts_with: String

  """All values ending with the given string."""
  dob_ends_with: String

  """All values not ending with the given string."""
  dob_not_ends_with: String
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  biography: String

  """All values that are not equal to given value."""
  biography_not: String

  """All values that are contained in given list."""
  biography_in: [String!]

  """All values that are not contained in given list."""
  biography_not_in: [String!]

  """All values less than the given value."""
  biography_lt: String

  """All values less than or equal the given value."""
  biography_lte: String

  """All values greater than the given value."""
  biography_gt: String

  """All values greater than or equal the given value."""
  biography_gte: String

  """All values containing the given string."""
  biography_contains: String

  """All values not containing the given string."""
  biography_not_contains: String

  """All values starting with the given string."""
  biography_starts_with: String

  """All values not starting with the given string."""
  biography_not_starts_with: String

  """All values ending with the given string."""
  biography_ends_with: String

  """All values not ending with the given string."""
  biography_not_ends_with: String
  imageThumbnail: String

  """All values that are not equal to given value."""
  imageThumbnail_not: String

  """All values that are contained in given list."""
  imageThumbnail_in: [String!]

  """All values that are not contained in given list."""
  imageThumbnail_not_in: [String!]

  """All values less than the given value."""
  imageThumbnail_lt: String

  """All values less than or equal the given value."""
  imageThumbnail_lte: String

  """All values greater than the given value."""
  imageThumbnail_gt: String

  """All values greater than or equal the given value."""
  imageThumbnail_gte: String

  """All values containing the given string."""
  imageThumbnail_contains: String

  """All values not containing the given string."""
  imageThumbnail_not_contains: String

  """All values starting with the given string."""
  imageThumbnail_starts_with: String

  """All values not starting with the given string."""
  imageThumbnail_not_starts_with: String

  """All values ending with the given string."""
  imageThumbnail_ends_with: String

  """All values not ending with the given string."""
  imageThumbnail_not_ends_with: String
  imageLarge: String

  """All values that are not equal to given value."""
  imageLarge_not: String

  """All values that are contained in given list."""
  imageLarge_in: [String!]

  """All values that are not contained in given list."""
  imageLarge_not_in: [String!]

  """All values less than the given value."""
  imageLarge_lt: String

  """All values less than or equal the given value."""
  imageLarge_lte: String

  """All values greater than the given value."""
  imageLarge_gt: String

  """All values greater than or equal the given value."""
  imageLarge_gte: String

  """All values containing the given string."""
  imageLarge_contains: String

  """All values not containing the given string."""
  imageLarge_not_contains: String

  """All values starting with the given string."""
  imageLarge_starts_with: String

  """All values not starting with the given string."""
  imageLarge_not_starts_with: String

  """All values ending with the given string."""
  imageLarge_ends_with: String

  """All values not ending with the given string."""
  imageLarge_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  minAgePref: Int

  """All values that are not equal to given value."""
  minAgePref_not: Int

  """All values that are contained in given list."""
  minAgePref_in: [Int!]

  """All values that are not contained in given list."""
  minAgePref_not_in: [Int!]

  """All values less than the given value."""
  minAgePref_lt: Int

  """All values less than or equal the given value."""
  minAgePref_lte: Int

  """All values greater than the given value."""
  minAgePref_gt: Int

  """All values greater than or equal the given value."""
  minAgePref_gte: Int
  maxAgePref: Int

  """All values that are not equal to given value."""
  maxAgePref_not: Int

  """All values that are contained in given list."""
  maxAgePref_in: [Int!]

  """All values that are not contained in given list."""
  maxAgePref_not_in: [Int!]

  """All values less than the given value."""
  maxAgePref_lt: Int

  """All values less than or equal the given value."""
  maxAgePref_lte: Int

  """All values greater than the given value."""
  maxAgePref_gt: Int

  """All values greater than or equal the given value."""
  maxAgePref_gte: Int
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  stripeCustomerId: String

  """All values that are not equal to given value."""
  stripeCustomerId_not: String

  """All values that are contained in given list."""
  stripeCustomerId_in: [String!]

  """All values that are not contained in given list."""
  stripeCustomerId_not_in: [String!]

  """All values less than the given value."""
  stripeCustomerId_lt: String

  """All values less than or equal the given value."""
  stripeCustomerId_lte: String

  """All values greater than the given value."""
  stripeCustomerId_gt: String

  """All values greater than or equal the given value."""
  stripeCustomerId_gte: String

  """All values containing the given string."""
  stripeCustomerId_contains: String

  """All values not containing the given string."""
  stripeCustomerId_not_contains: String

  """All values starting with the given string."""
  stripeCustomerId_starts_with: String

  """All values not starting with the given string."""
  stripeCustomerId_not_starts_with: String

  """All values ending with the given string."""
  stripeCustomerId_ends_with: String

  """All values not ending with the given string."""
  stripeCustomerId_not_ends_with: String
  stripeSubscriptionId: String

  """All values that are not equal to given value."""
  stripeSubscriptionId_not: String

  """All values that are contained in given list."""
  stripeSubscriptionId_in: [String!]

  """All values that are not contained in given list."""
  stripeSubscriptionId_not_in: [String!]

  """All values less than the given value."""
  stripeSubscriptionId_lt: String

  """All values less than or equal the given value."""
  stripeSubscriptionId_lte: String

  """All values greater than the given value."""
  stripeSubscriptionId_gt: String

  """All values greater than or equal the given value."""
  stripeSubscriptionId_gte: String

  """All values containing the given string."""
  stripeSubscriptionId_contains: String

  """All values not containing the given string."""
  stripeSubscriptionId_not_contains: String

  """All values starting with the given string."""
  stripeSubscriptionId_starts_with: String

  """All values not starting with the given string."""
  stripeSubscriptionId_not_starts_with: String

  """All values ending with the given string."""
  stripeSubscriptionId_ends_with: String

  """All values not ending with the given string."""
  stripeSubscriptionId_not_ends_with: String
  verified: Boolean

  """All values that are not equal to given value."""
  verified_not: Boolean
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  firstName: String
  lastName: String
  password: String
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserUpdategenderPrefsInput
  img: ProfilePicUpdateManyWithoutUserInput
  interests: GenreUpdateManyInput
  events: EventUpdateManyWithoutAttendingInput
  liked: UserUpdateManyInput
  blocked: UserUpdateManyInput
  chats: ChatUpdateManyWithoutUsersInput
}

input UserUpdategenderPrefsInput {
  set: [Gender!]
}

input UserUpdateInput {
  firstName: String
  lastName: String
  password: String
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserUpdategenderPrefsInput
  img: ProfilePicUpdateManyWithoutUserInput
  interests: GenreUpdateManyInput
  events: EventUpdateManyWithoutAttendingInput
  liked: UserUpdateManyInput
  blocked: UserUpdateManyInput
  chats: ChatUpdateManyWithoutUsersInput
}

input UserUpdateManyDataInput {
  firstName: String
  lastName: String
  password: String
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserUpdategenderPrefsInput
}

input UserUpdateManyInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueNestedInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueNestedInput!]
}

input UserUpdateManyMutationInput {
  firstName: String
  lastName: String
  password: String
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserUpdategenderPrefsInput
}

input UserUpdateManyWithoutChatsInput {
  create: [UserCreateWithoutChatsInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutChatsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutChatsInput!]
}

input UserUpdateManyWithoutEventsInput {
  create: [UserCreateWithoutEventsInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutEventsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutEventsInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneRequiredWithoutImgInput {
  create: UserCreateWithoutImgInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutImgDataInput
  upsert: UserUpsertWithoutImgInput
}

input UserUpdateWithoutChatsDataInput {
  firstName: String
  lastName: String
  password: String
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserUpdategenderPrefsInput
  img: ProfilePicUpdateManyWithoutUserInput
  interests: GenreUpdateManyInput
  events: EventUpdateManyWithoutAttendingInput
  liked: UserUpdateManyInput
  blocked: UserUpdateManyInput
}

input UserUpdateWithoutEventsDataInput {
  firstName: String
  lastName: String
  password: String
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserUpdategenderPrefsInput
  img: ProfilePicUpdateManyWithoutUserInput
  interests: GenreUpdateManyInput
  liked: UserUpdateManyInput
  blocked: UserUpdateManyInput
  chats: ChatUpdateManyWithoutUsersInput
}

input UserUpdateWithoutImgDataInput {
  firstName: String
  lastName: String
  password: String
  gender: Gender
  age: Int
  dob: String
  location: String
  email: String
  phone: String
  biography: String
  imageThumbnail: String
  imageLarge: String
  resetToken: String
  resetTokenExpiry: Float
  minAgePref: Int
  maxAgePref: Int
  permissions: Permission
  stripeCustomerId: String
  stripeSubscriptionId: String
  verified: Boolean
  genderPrefs: UserUpdategenderPrefsInput
  interests: GenreUpdateManyInput
  events: EventUpdateManyWithoutAttendingInput
  liked: UserUpdateManyInput
  blocked: UserUpdateManyInput
  chats: ChatUpdateManyWithoutUsersInput
}

input UserUpdateWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  data: UserUpdateDataInput!
}

input UserUpdateWithWhereUniqueWithoutChatsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutChatsDataInput!
}

input UserUpdateWithWhereUniqueWithoutEventsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutEventsDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutImgInput {
  update: UserUpdateWithoutImgDataInput!
  create: UserCreateWithoutImgInput!
}

input UserUpsertWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithWhereUniqueWithoutChatsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutChatsDataInput!
  create: UserCreateWithoutChatsInput!
}

input UserUpsertWithWhereUniqueWithoutEventsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutEventsDataInput!
  create: UserCreateWithoutEventsInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  firstName: String

  """All values that are not equal to given value."""
  firstName_not: String

  """All values that are contained in given list."""
  firstName_in: [String!]

  """All values that are not contained in given list."""
  firstName_not_in: [String!]

  """All values less than the given value."""
  firstName_lt: String

  """All values less than or equal the given value."""
  firstName_lte: String

  """All values greater than the given value."""
  firstName_gt: String

  """All values greater than or equal the given value."""
  firstName_gte: String

  """All values containing the given string."""
  firstName_contains: String

  """All values not containing the given string."""
  firstName_not_contains: String

  """All values starting with the given string."""
  firstName_starts_with: String

  """All values not starting with the given string."""
  firstName_not_starts_with: String

  """All values ending with the given string."""
  firstName_ends_with: String

  """All values not ending with the given string."""
  firstName_not_ends_with: String
  lastName: String

  """All values that are not equal to given value."""
  lastName_not: String

  """All values that are contained in given list."""
  lastName_in: [String!]

  """All values that are not contained in given list."""
  lastName_not_in: [String!]

  """All values less than the given value."""
  lastName_lt: String

  """All values less than or equal the given value."""
  lastName_lte: String

  """All values greater than the given value."""
  lastName_gt: String

  """All values greater than or equal the given value."""
  lastName_gte: String

  """All values containing the given string."""
  lastName_contains: String

  """All values not containing the given string."""
  lastName_not_contains: String

  """All values starting with the given string."""
  lastName_starts_with: String

  """All values not starting with the given string."""
  lastName_not_starts_with: String

  """All values ending with the given string."""
  lastName_ends_with: String

  """All values not ending with the given string."""
  lastName_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  gender: Gender

  """All values that are not equal to given value."""
  gender_not: Gender

  """All values that are contained in given list."""
  gender_in: [Gender!]

  """All values that are not contained in given list."""
  gender_not_in: [Gender!]
  age: Int

  """All values that are not equal to given value."""
  age_not: Int

  """All values that are contained in given list."""
  age_in: [Int!]

  """All values that are not contained in given list."""
  age_not_in: [Int!]

  """All values less than the given value."""
  age_lt: Int

  """All values less than or equal the given value."""
  age_lte: Int

  """All values greater than the given value."""
  age_gt: Int

  """All values greater than or equal the given value."""
  age_gte: Int
  dob: String

  """All values that are not equal to given value."""
  dob_not: String

  """All values that are contained in given list."""
  dob_in: [String!]

  """All values that are not contained in given list."""
  dob_not_in: [String!]

  """All values less than the given value."""
  dob_lt: String

  """All values less than or equal the given value."""
  dob_lte: String

  """All values greater than the given value."""
  dob_gt: String

  """All values greater than or equal the given value."""
  dob_gte: String

  """All values containing the given string."""
  dob_contains: String

  """All values not containing the given string."""
  dob_not_contains: String

  """All values starting with the given string."""
  dob_starts_with: String

  """All values not starting with the given string."""
  dob_not_starts_with: String

  """All values ending with the given string."""
  dob_ends_with: String

  """All values not ending with the given string."""
  dob_not_ends_with: String
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  biography: String

  """All values that are not equal to given value."""
  biography_not: String

  """All values that are contained in given list."""
  biography_in: [String!]

  """All values that are not contained in given list."""
  biography_not_in: [String!]

  """All values less than the given value."""
  biography_lt: String

  """All values less than or equal the given value."""
  biography_lte: String

  """All values greater than the given value."""
  biography_gt: String

  """All values greater than or equal the given value."""
  biography_gte: String

  """All values containing the given string."""
  biography_contains: String

  """All values not containing the given string."""
  biography_not_contains: String

  """All values starting with the given string."""
  biography_starts_with: String

  """All values not starting with the given string."""
  biography_not_starts_with: String

  """All values ending with the given string."""
  biography_ends_with: String

  """All values not ending with the given string."""
  biography_not_ends_with: String
  imageThumbnail: String

  """All values that are not equal to given value."""
  imageThumbnail_not: String

  """All values that are contained in given list."""
  imageThumbnail_in: [String!]

  """All values that are not contained in given list."""
  imageThumbnail_not_in: [String!]

  """All values less than the given value."""
  imageThumbnail_lt: String

  """All values less than or equal the given value."""
  imageThumbnail_lte: String

  """All values greater than the given value."""
  imageThumbnail_gt: String

  """All values greater than or equal the given value."""
  imageThumbnail_gte: String

  """All values containing the given string."""
  imageThumbnail_contains: String

  """All values not containing the given string."""
  imageThumbnail_not_contains: String

  """All values starting with the given string."""
  imageThumbnail_starts_with: String

  """All values not starting with the given string."""
  imageThumbnail_not_starts_with: String

  """All values ending with the given string."""
  imageThumbnail_ends_with: String

  """All values not ending with the given string."""
  imageThumbnail_not_ends_with: String
  imageLarge: String

  """All values that are not equal to given value."""
  imageLarge_not: String

  """All values that are contained in given list."""
  imageLarge_in: [String!]

  """All values that are not contained in given list."""
  imageLarge_not_in: [String!]

  """All values less than the given value."""
  imageLarge_lt: String

  """All values less than or equal the given value."""
  imageLarge_lte: String

  """All values greater than the given value."""
  imageLarge_gt: String

  """All values greater than or equal the given value."""
  imageLarge_gte: String

  """All values containing the given string."""
  imageLarge_contains: String

  """All values not containing the given string."""
  imageLarge_not_contains: String

  """All values starting with the given string."""
  imageLarge_starts_with: String

  """All values not starting with the given string."""
  imageLarge_not_starts_with: String

  """All values ending with the given string."""
  imageLarge_ends_with: String

  """All values not ending with the given string."""
  imageLarge_not_ends_with: String
  resetToken: String

  """All values that are not equal to given value."""
  resetToken_not: String

  """All values that are contained in given list."""
  resetToken_in: [String!]

  """All values that are not contained in given list."""
  resetToken_not_in: [String!]

  """All values less than the given value."""
  resetToken_lt: String

  """All values less than or equal the given value."""
  resetToken_lte: String

  """All values greater than the given value."""
  resetToken_gt: String

  """All values greater than or equal the given value."""
  resetToken_gte: String

  """All values containing the given string."""
  resetToken_contains: String

  """All values not containing the given string."""
  resetToken_not_contains: String

  """All values starting with the given string."""
  resetToken_starts_with: String

  """All values not starting with the given string."""
  resetToken_not_starts_with: String

  """All values ending with the given string."""
  resetToken_ends_with: String

  """All values not ending with the given string."""
  resetToken_not_ends_with: String
  resetTokenExpiry: Float

  """All values that are not equal to given value."""
  resetTokenExpiry_not: Float

  """All values that are contained in given list."""
  resetTokenExpiry_in: [Float!]

  """All values that are not contained in given list."""
  resetTokenExpiry_not_in: [Float!]

  """All values less than the given value."""
  resetTokenExpiry_lt: Float

  """All values less than or equal the given value."""
  resetTokenExpiry_lte: Float

  """All values greater than the given value."""
  resetTokenExpiry_gt: Float

  """All values greater than or equal the given value."""
  resetTokenExpiry_gte: Float
  minAgePref: Int

  """All values that are not equal to given value."""
  minAgePref_not: Int

  """All values that are contained in given list."""
  minAgePref_in: [Int!]

  """All values that are not contained in given list."""
  minAgePref_not_in: [Int!]

  """All values less than the given value."""
  minAgePref_lt: Int

  """All values less than or equal the given value."""
  minAgePref_lte: Int

  """All values greater than the given value."""
  minAgePref_gt: Int

  """All values greater than or equal the given value."""
  minAgePref_gte: Int
  maxAgePref: Int

  """All values that are not equal to given value."""
  maxAgePref_not: Int

  """All values that are contained in given list."""
  maxAgePref_in: [Int!]

  """All values that are not contained in given list."""
  maxAgePref_not_in: [Int!]

  """All values less than the given value."""
  maxAgePref_lt: Int

  """All values less than or equal the given value."""
  maxAgePref_lte: Int

  """All values greater than the given value."""
  maxAgePref_gt: Int

  """All values greater than or equal the given value."""
  maxAgePref_gte: Int
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  stripeCustomerId: String

  """All values that are not equal to given value."""
  stripeCustomerId_not: String

  """All values that are contained in given list."""
  stripeCustomerId_in: [String!]

  """All values that are not contained in given list."""
  stripeCustomerId_not_in: [String!]

  """All values less than the given value."""
  stripeCustomerId_lt: String

  """All values less than or equal the given value."""
  stripeCustomerId_lte: String

  """All values greater than the given value."""
  stripeCustomerId_gt: String

  """All values greater than or equal the given value."""
  stripeCustomerId_gte: String

  """All values containing the given string."""
  stripeCustomerId_contains: String

  """All values not containing the given string."""
  stripeCustomerId_not_contains: String

  """All values starting with the given string."""
  stripeCustomerId_starts_with: String

  """All values not starting with the given string."""
  stripeCustomerId_not_starts_with: String

  """All values ending with the given string."""
  stripeCustomerId_ends_with: String

  """All values not ending with the given string."""
  stripeCustomerId_not_ends_with: String
  stripeSubscriptionId: String

  """All values that are not equal to given value."""
  stripeSubscriptionId_not: String

  """All values that are contained in given list."""
  stripeSubscriptionId_in: [String!]

  """All values that are not contained in given list."""
  stripeSubscriptionId_not_in: [String!]

  """All values less than the given value."""
  stripeSubscriptionId_lt: String

  """All values less than or equal the given value."""
  stripeSubscriptionId_lte: String

  """All values greater than the given value."""
  stripeSubscriptionId_gt: String

  """All values greater than or equal the given value."""
  stripeSubscriptionId_gte: String

  """All values containing the given string."""
  stripeSubscriptionId_contains: String

  """All values not containing the given string."""
  stripeSubscriptionId_not_contains: String

  """All values starting with the given string."""
  stripeSubscriptionId_starts_with: String

  """All values not starting with the given string."""
  stripeSubscriptionId_not_starts_with: String

  """All values ending with the given string."""
  stripeSubscriptionId_ends_with: String

  """All values not ending with the given string."""
  stripeSubscriptionId_not_ends_with: String
  verified: Boolean

  """All values that are not equal to given value."""
  verified_not: Boolean
  img_every: ProfilePicWhereInput
  img_some: ProfilePicWhereInput
  img_none: ProfilePicWhereInput
  interests_every: GenreWhereInput
  interests_some: GenreWhereInput
  interests_none: GenreWhereInput
  events_every: EventWhereInput
  events_some: EventWhereInput
  events_none: EventWhereInput
  liked_every: UserWhereInput
  liked_some: UserWhereInput
  liked_none: UserWhereInput
  blocked_every: UserWhereInput
  blocked_some: UserWhereInput
  blocked_none: UserWhereInput
  chats_every: ChatWhereInput
  chats_some: ChatWhereInput
  chats_none: ChatWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
  phone: String
}
